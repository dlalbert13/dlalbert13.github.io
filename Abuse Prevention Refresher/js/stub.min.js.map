{"version":3,"sources":["Utils.js","app.js","json2.js","easyXDM.debug.js","reqwest.min.js","js.cookie.js","12.js","2004.js"],"names":["Utils","s4xdmInit","s4xdmConfig","scormVersion","scorm","scorm12Obj","scorm2004Obj","document","body","innerHTML","loadDataFromLMS","setTimeout","launchProvider","s4xdmUnload","finish","displayProtected","h","getElementById","loaderObj","qArray","w","utilsInstance","parseQueryString","location","href","scoPath","res_21983","courseDir","dir_21983","length","console","log","width","height","remotePath","providerBaseURL","providerURL","localEasyxdmHelper","remoteEasyxdm","remoteEasyxdmHelper","props","style","socket","easyXDM","Socket","local","swf","container","swfNoThrottle","remote","remoteHelper","onMessage","onReady","bridgeReady","message","action","details","providerConfig","scoData","getRuntimeData","shareCookiesWithProvider","cookies","Cookies","get","JSON","stringify","postMessage","origin","parsed","parse","command","alert","set","k","v","commit","cookieProperties","this","f","n","quote","string","escapable","lastIndex","test","replace","a","c","meta","charCodeAt","toString","slice","str","key","holder","i","partial","mind","gap","value","toJSON","rep","call","isFinite","String","indent","Object","prototype","apply","join","push","hasOwnProperty","Date","valueOf","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Number","Boolean","cx","\b","\t","\n","\f","\r","\"","\\","replacer","space","Error","","text","reviver","walk","undefined","j","eval","SyntaxError","window","decodeURIComponent","encodeURIComponent","isHostMethod","object","property","t","isHostObject","isArray","o","hasFlash","name","mimeType","undef","navigator","plugins","description","mimeTypes","enabledPlugin","flashVersion","match","flash","ActiveXObject","Array","GetVariable","notSupportedException","major","parseInt","minor","HAS_FLASH_THROTTLED_BUG","dom_onReady","domIsReady","_trace","domReadyQueue","whenReady","fn","scope","getParentObject","obj","parent","namespace","ii","split","noConflict","ns","_easyXDM","IFRAME_PREFIX","getDomainName","url","reURI","getPort","getLocation","m","toLowerCase","proto","domain","port","resolveUrl","reDoubleSlash","path","substring","pathname","lastIndexOf","protocol","host","reParent","appendQueryParameters","parameters","hash","indexOf","q","useHash","destination","source","noOverwrite","member","prop","testForNamePropertyBug","form","appendChild","createElement","input","channelId","HAS_NAME_PROPERTY_BUG","elements","removeChild","createFrame","config","src","frame","id","setAttribute","position","top","left","border","frameBorder","allowTransparency","onLoad","on","usePost","target","method","submit","parentNode","checkAcl","acl","re","RegExp","substr","prepareTransportStack","stackEls","isHost","query","xdm_p","channel","secret","Math","random","product","userAgent","xdm_c","xdm_s","xdm_e","interval","delay","useResize","useParent","usePolling","image","images","getElementsByTagName","search","xdm_pa","xdm_po","stack","HashTransport","ReliableBehavior","QueueBehavior","encode","maxLength","VerifyBehavior","initiate","PostMessageTransport","NameTransport","NixTransport","SameOriginTransport","FrameElementTransport","FlashTransport","lazy","remove","chainStack","stackElements","stackEl","defaults","incoming","up","outgoing","recipient","down","callback","success","init","destroy","len","removeFromStack","element","un","global","floor","emptyFn","Function","type","listener","addEventListener","removeEventListener","sEvent","fpNotify","attachEvent","detachEvent","readyState","documentElement","doScroll","doScrollCheck","e","pair","data","getJSON","cached","json","evalJSON","version","getJSONObject","debug","_deferred","flush","trace","getTime","d","getHours","getMinutes","s","getSeconds","ms","getMilliseconds","zeros","msg","el","createTextNode","scrollTop","scrollHeight","info","logWin","windowname","open","doc","write","close","getTracer","Debug","DomHelper","requiresJSON","_map","Fn","del","concat","Rpc","jsonRpcConfig","RpcBehavior","pub","send","targetOrigin","onDOMReady","sendFn","addSwf","swfContainer","firstChild","queue","right","overflow","flashVars","destroyChannel","swfdomain","createChannel","_getOrigin","event","uri","_window_onMessage","_window_waitForReady","callerWindow","contentWindow","referrer","frameElement","_sendMessage","sendMessage","_onReady","readyCount","_onMessage","remoteOrigin","_onLoad","remoteWindow","remoteUrl","_msgNr","_remoteOrigin","_callerWindow","_handleHash","_lastMsg","_pollHash","_listenerWindow","_attachListeners","_timer","setInterval","pollInterval","clearInterval","tries","max","getRef","frames","ex","idOut","idIn","currentMessage","ack","dispatch","waiting","destroying","shift","doFragment","seq","fragment","fragments","startVerification","mySecret","theirSecret","proxy","_send","jsonrpc","serializer","_createMethod","definition","l","arguments","error","params","_callbacks","_callbackCounter","namedParams","_executeMethod","code","result","ex1","handle","module","exports","define","amd","succeed","protocolRe","exec","context","httpsRe","twoHundo","request","status","response","handleReadyState","_aborted","_timedOut","onreadystatechange","noop","setHeaders","r","headers","Accept","defaultHeaders","accept","FormData","crossOrigin","requestedWith","contentType","setRequestHeader","setCredentials","withCredentials","generalCallback","lastValue","urlappend","handleJsonp","uniqid","jsonpCallback","jsonpCallbackName","reqwest","getcallbackPrefix","u","async","htmlFor","onload","onclick","head","abort","getRequest","toUpperCase","processData","toQueryString","xhr","xDomainRequest","onerror","onprogress","before","Reqwest","setType","complete","timeout","clearTimeout","self","_completeHandlers","resp","getResponseHeader","filteredResponse","globalSetupOptions","dataFilter","responseText","err","responseXML","parseError","errorCode","reason","_responseArgs","_fulfilled","_successHandler","_fulfillmentHandlers","timedOut","_erred","_errorHandlers","normalize","serial","tagName","disabled","attributes","specified","checked","selectedIndex","options","selected","eachFormElement","byTag","serializeQueryString","serializeArray","serializeHash","buildParams","XHR2","require","callbackPrefix","xmlHttpRequest","*","xml","html","js","XMLHttpRequest","XDomainRequest","retry","then","always","fail","catch","serialize","pop","nodeType","compat","dataType","jsonp","ajaxSetup","factory","registeredInModuleLoader","OldCookies","api","extend","converter","expires","setMilliseconds","escape","cookie","toUTCString","secure","rdecode","parts","charAt","read","withConverter","splitWithTail","delim","count","tail","queryString","origQueryString","queryComponents","keyValuePair","decode","unescape","bind","oThis","TypeError","aArgs","fToBind","fNOP","fBound","WriteToDebug","SCORM_findAPI","win","API","SCORM_findAPITries","getAPIHandle","theAPI","opener","dmeList","LMSSetValue","LMSCommit","LMSFinish","ret","LMSInitialize","LMSGetValue","objectives","interactions","getObjectiveData","getInteractionData","setupDefaults","forceStatusIncompleteOnInit","cs","useObjectives","obj_names","_nameCount","nCount","_name","_value","isNaN","useInteractions","interaction_names","apiHandle","getAPI","ScanParentsForApi","nParentsSearched","API_1484_11","MAX_PARENTS_TO_SEARCH","SetValue","Commit","Terminate","Initialize","GetValue","commentsFromLearner","commentsFromLMS","getCommentsFromLearner","getCommentsFromLMS","useCommentsFromLearner","useCommentsFromLMS","onunload"],"mappings":"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","file":"stub.min.js","sourcesContent":["if (typeof console === \"undefined\") {\n    console = {\n        log: function (n) {\n            //debugging\n            return;\n        }\n    };\n}\n\nfunction Utils() {\n}\n\nUtils.prototype.splitWithTail = function(str,delim,count){\n    var parts = str.split(delim);\n    var tail = parts.slice(count).join(delim);\n    var result = parts.slice(0,count);\n    result.push(tail);\n    return result;\n}\n\nUtils.prototype.parseQueryString = function (queryString) {\n    // define an object to contain the parsed query data\n    var result = {};\n    var origQueryString = queryString;\n    //if the query string still has the ?, check to see if it still has the URL attached to it. if so then strip off the URL\n    if (queryString.indexOf(\"?\") != -1) {\n        if (this.splitWithTail(queryString, \"?\", 1)[0]) {\n            queryString = this.splitWithTail(queryString, \"?\", 1)[1];\n        }\n    }\n\n    // remove the leading question mark from the query string if it is present\n    if (queryString.charAt(0) == '?') queryString = queryString.substring(1);\n\n    // replace plus signs in the query string with spaces\n    queryString = queryString.replace('+', ' ');\n\n    // split the query string around ampersands and semicolons\n    var queryComponents = queryString.split(/[&;]/g);\n\n    // loop over the query string components\n    for (var i = 0; i < queryComponents.length; i++) {\n        // extract this component's key-value pair\n        if (queryComponents[i].indexOf('=') != -1) {\n            var keyValuePair = queryComponents[i].split('=');\n            var key = this.decode(keyValuePair[0]);\n            var value = this.decode(keyValuePair[1]);\n            // update the parsed query data with this component's key-value pair\n            if (!result[key]) result[key] = [];\n            result[key].push((keyValuePair.length == 1) ? '' : value);\n        }\n        else {\n            //if we are are here the either there is no querystring or there is just a \"?\" and nothing else\n            if (origQueryString.indexOf(\"?\") != -1) {\n                result[\"NULL\"] = [];\n                result[\"NULL\"].push(origQueryString.split(\"?\")[1]);\n            }\n            else {\n                alert(\"no querystring contained in \\n \" + queryComponents + \" loaded from \" + document.location.href)\n                return \"\";\n            }\n        }\n    }\n\n    // return the parsed query data\n    return result;\n};\n\nUtils.prototype.decode = function (str) {\n    return unescape(str.replace(/\\+/g, \" \"));\n};\n\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    if (this.prototype) {\n      // Function.prototype doesn't have a prototype property\n      fNOP.prototype = this.prototype;\n    }\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n","var courseDir;\nvar scorm;\nvar scoPath;\nvar socket;\n\nfunction s4xdmInit() {\n    switch (s4xdmConfig.scormVersion) {\n        case \"12\":\n            scorm = scorm12Obj;\n            break;\n        case \"2004\":\n            scorm = scorm2004Obj;\n            break;\n    }\n    document.body.innerHTML = '<div id=\"scorm_content_frame_201542433\" class=\"fullscreen\"></div>';\n    scorm.loadDataFromLMS();\n    // Make sure the body has rendered the div that holds the frame.\n    setTimeout(function() {\n        launchProvider(scorm);\n    }, 1);\n}\nwindow.onload = s4xdmInit;\n\nfunction s4xdmUnload() {\n    scorm.finish();\n}\nwindow.onunload = s4xdmUnload;\n\nfunction displayProtected() {\n    var h = document.getElementById(\"scorm_content_frame_201542433\");\n    h.innerHTML = \"<h1>Access Denied</h1><p>You do not have access to the course you were attempting to open. Please contact your LMS administrator for more information.\";\n}\n\nfunction launchProvider(loaderObj) {\n    var n, ret, qArray, w, h, i, parsed, scoUrl, utilsInstance;\n    utilsInstance = new Utils();\n    qArray = utilsInstance.parseQueryString(document.location.href);\n    scoPath = qArray.res_21983[0];\n    courseDir = s4xdmConfig.courseDir;\n    if (qArray.dir_21983 && qArray.dir_21983.length > 0) {\n        courseDir = qArray.dir_21983[0];\n    }\n    console.log(\"scopath\", scoPath, \"coursedir\", courseDir);\n\n    if (s4xdmConfig.width) {\n        w = s4xdmConfig.width;\n    }\n    else {\n        w = 0;\n    }\n\n    if (s4xdmConfig.height) {\n        h = s4xdmConfig.height;\n    }\n    else {\n        h = 0;\n    }\n\n    var remotePath = s4xdmConfig.providerBaseURL,\n        providerURL = remotePath + \"/provider.htm\",\n        localEasyxdmHelper = '../js/easyxdm/name.html',\n        remoteEasyxdm = remotePath + '/easyxdm/easyxdm.swf',\n        remoteEasyxdmHelper = remotePath + '/easyxdm/name.html';\n    if (s4xdmConfig.providerURL) {\n        providerURL = s4xdmConfig.providerURL;\n    }\n    console.log(\"getSCORMData() parameters for comm socket\");\n    console.log(\">>\tprovider: \" + providerURL);\n    console.log(\">>\tswf: \" + remoteEasyxdm);\n    console.log(\">>\tlocal: \" + localEasyxdmHelper);\n    console.log(\">> remoteHelper: \" + remoteEasyxdmHelper);\n    console.log(\">> onMessage: waiting for data...\");\n    console.log(\">> onReady: waiting for data...\");\n\n    var props = {};\n    if (w && h) {\n        props.style = {\n            width: w + \"px\",\n            height: h + \"px\"\n        };\n    }\n    else {\n        props.style = {\n            width: \"100%\",\n            height: \"100%\"\n        };\n    }\n\n    socket = new easyXDM.Socket({\n        local: localEasyxdmHelper,\n        swf: remoteEasyxdm,\n        container: \"scorm_content_frame_201542433\",\n        swfNoThrottle: true,\n        remote: providerURL,\n        remoteHelper: remoteEasyxdmHelper,\n        props: props,\n        onMessage: onMessage,\n        onReady: bridgeReady\n    });\n}\n\nfunction bridgeReady() {\n    console.log(\"onReady fired. comm socket is ready.\");\n    console.log(\"courseDir\", courseDir);\n    var message = {\n        action: \"load\",\n        scormVersion: s4xdmConfig.scormVersion,\n        details: s4xdmConfig.providerConfig,\n        courseDir: courseDir,\n        scoPath: scoPath,\n        scoData: scorm.getRuntimeData()\n    };\n    if (s4xdmConfig.shareCookiesWithProvider) {\n        message.cookies = Cookies.get();\n    }\n    console.log(\"message\", JSON.stringify(message));\n    socket.postMessage(JSON.stringify(message));\n}\n\nfunction onMessage(message, origin) {\n    console.log(\"onMessage fired message = \", message);\n    var parsed = JSON.parse(message);\n    if (parsed.command === \"alert\") {\n        alert(parsed.alert);\n    }\n    else if (parsed.command === \"set\") {\n        scorm.set(parsed.k, parsed.v);\n    }\n    else if (parsed.command === \"commit\") {\n        scorm.commit();\n    }\n    else if (parsed.command === \"finish\") {\n        scorm.finish();\n    }\n    else if (parsed.command === \"setCookie\") {\n        Cookies.set(parsed.k, parsed.v, parsed.cookieProperties);\n    }\n    else if (parsed.command === \"notAllowed\") {\n        displayProtected();\n    }\n    else {\n        alert(\"Unknown command in onMessage\", message);\n    }\n}","/*\n    http://www.JSON.org/json2.js\n    2010-03-20\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    See http://www.JSON.org/js.html\n\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n\n\n    This file creates a global JSON object containing two methods: stringify\n    and parse.\n\n        JSON.stringify(value, replacer, space)\n            value       any JavaScript value, usually an object or array.\n\n            replacer    an optional parameter that determines how object\n                        values are stringified for objects. It can be a\n                        function or an array of strings.\n\n            space       an optional parameter that specifies the indentation\n                        of nested structures. If it is omitted, the text will\n                        be packed without extra whitespace. If it is a number,\n                        it will specify the number of spaces to indent at each\n                        level. If it is a string (such as '\\t' or '&nbsp;'),\n                        it contains the characters used to indent at each level.\n\n            This method produces a JSON text from a JavaScript value.\n\n            When an object value is found, if the object contains a toJSON\n            method, its toJSON method will be called and the result will be\n            stringified. A toJSON method does not serialize: it returns the\n            value represented by the name/value pair that should be serialized,\n            or undefined if nothing should be serialized. The toJSON method\n            will be passed the key associated with the value, and this will be\n            bound to the value\n\n            For example, this would serialize Dates as ISO strings.\n\n                Date.prototype.toJSON = function (key) {\n                    function f(n) {\n                        // Format integers to have at least two digits.\n                        return n < 10 ? '0' + n : n;\n                    }\n\n                    return this.getUTCFullYear()   + '-' +\n                         f(this.getUTCMonth() + 1) + '-' +\n                         f(this.getUTCDate())      + 'T' +\n                         f(this.getUTCHours())     + ':' +\n                         f(this.getUTCMinutes())   + ':' +\n                         f(this.getUTCSeconds())   + 'Z';\n                };\n\n            You can provide an optional replacer method. It will be passed the\n            key and value of each member, with this bound to the containing\n            object. The value that is returned from your method will be\n            serialized. If your method returns undefined, then the member will\n            be excluded from the serialization.\n\n            If the replacer parameter is an array of strings, then it will be\n            used to select the members to be serialized. It filters the results\n            such that only members with keys listed in the replacer array are\n            stringified.\n\n            Values that do not have JSON representations, such as undefined or\n            functions, will not be serialized. Such values in objects will be\n            dropped; in arrays they will be replaced with null. You can use\n            a replacer function to replace those with JSON values.\n            JSON.stringify(undefined) returns undefined.\n\n            The optional space parameter produces a stringification of the\n            value that is filled with line breaks and indentation to make it\n            easier to read.\n\n            If the space parameter is a non-empty string, then that string will\n            be used for indentation. If the space parameter is a number, then\n            the indentation will be that many spaces.\n\n            Example:\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}]);\n            // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\\t');\n            // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n            text = JSON.stringify([new Date()], function (key, value) {\n                return this[key] instanceof Date ?\n                    'Date(' + this[key] + ')' : value;\n            });\n            // text is '[\"Date(---current time---)\"]'\n\n\n        JSON.parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = JSON.parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n            myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n                var d;\n                if (typeof value === 'string' &&\n                        value.slice(0, 5) === 'Date(' &&\n                        value.slice(-1) === ')') {\n                    d = new Date(value.slice(5, -1));\n                    if (d) {\n                        return d;\n                    }\n                }\n                return value;\n            });\n\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n*/\n\n/*jslint evil: true, strict: false */\n\n/*members \"\", \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\\"\", JSON, \"\\\\\", apply,\n    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n    test, toJSON, toString, valueOf\n*/\n\n\n// Create a JSON object only if one does not already exist. We create the\n// methods in a closure to avoid creating global variables.\n\nif (!this.JSON) {\n    this.JSON = {};\n}\n\n(function () {\n\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n < 10 ? '0' + n : n;\n    }\n\n    if (typeof Date.prototype.toJSON !== 'function') {\n\n        Date.prototype.toJSON = function (key) {\n\n            return isFinite(this.valueOf()) ?\n                   this.getUTCFullYear()   + '-' +\n                 f(this.getUTCMonth() + 1) + '-' +\n                 f(this.getUTCDate())      + 'T' +\n                 f(this.getUTCHours())     + ':' +\n                 f(this.getUTCMinutes())   + ':' +\n                 f(this.getUTCSeconds())   + 'Z' : null;\n        };\n\n        String.prototype.toJSON =\n        Number.prototype.toJSON =\n        Boolean.prototype.toJSON = function (key) {\n            return this.valueOf();\n        };\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        escapable.lastIndex = 0;\n        return escapable.test(string) ?\n            '\"' + string.replace(escapable, function (a) {\n                var c = meta[a];\n                return typeof c === 'string' ? c :\n                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + '\"' :\n            '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            mind = gap,\n            partial,\n            value = holder[key];\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n        if (value && typeof value === 'object' &&\n                typeof value.toJSON === 'function') {\n            value = value.toJSON(key);\n        }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n            return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n            if (!value) {\n                return 'null';\n            }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n            gap += indent;\n            partial = [];\n\n// Is the value an array?\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                v = partial.length === 0 ? '[]' :\n                    gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                                mind + ']' :\n                          '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                for (k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n            v = partial.length === 0 ? '{}' :\n                gap ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== 'function') {\n        JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap = '';\n            indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                     typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n            return str('', {'': value});\n        };\n    }\n\n\n// If the JSON object does not yet have a parse method, give it one.\n\n    if (typeof JSON.parse !== 'function') {\n        JSON.parse = function (text, reviver) {\n\n// The parse method takes a text and an optional reviver function, and returns\n// a JavaScript value if the text is a valid JSON text.\n\n            var j;\n\n            function walk(holder, key) {\n\n// The walk method is used to recursively walk the resulting structure so\n// that modifications can be made.\n\n                var k, v, value = holder[key];\n                if (value && typeof value === 'object') {\n                    for (k in value) {\n                        if (Object.hasOwnProperty.call(value, k)) {\n                            v = walk(value, k);\n                            if (v !== undefined) {\n                                value[k] = v;\n                            } else {\n                                delete value[k];\n                            }\n                        }\n                    }\n                }\n                return reviver.call(holder, key, value);\n            }\n\n\n// Parsing happens in four stages. In the first stage, we replace certain\n// Unicode characters with escape sequences. JavaScript handles many characters\n// incorrectly, either silently deleting them, or treating them as line endings.\n\n            text = String(text);\n            cx.lastIndex = 0;\n            if (cx.test(text)) {\n                text = text.replace(cx, function (a) {\n                    return '\\\\u' +\n                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n                });\n            }\n\n// In the second stage, we run the text against regular expressions that look\n// for non-JSON patterns. We are especially concerned with '()' and 'new'\n// because they can cause invocation, and '=' because it can cause mutation.\n// But just to be safe, we want to reject all unexpected forms.\n\n// We split the second stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n// replace all simple value tokens with ']' characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or ']' or\n// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n            if (/^[\\],:{}\\s]*$/.\ntest(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').\nreplace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\nreplace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n\n// In the third stage we use the eval function to compile the text into a\n// JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n// in JavaScript: it can begin a block or an object literal. We wrap the text\n// in parens to eliminate the ambiguity.\n\n                j = eval('(' + text + ')');\n\n// In the optional fourth stage, we recursively walk the new structure, passing\n// each name/value pair to a reviver function for possible transformation.\n\n                return typeof reviver === 'function' ?\n                    walk({'': j}, '') : j;\n            }\n\n// If the text is not JSON parseable, then a SyntaxError is thrown.\n\n            throw new SyntaxError('JSON.parse');\n        };\n    }\n}());\n","/**\n * easyXDM\n * http://easyxdm.net/\n * Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function (window, document, location, setTimeout, decodeURIComponent, encodeURIComponent) {\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global JSON, XMLHttpRequest, window, escape, unescape, ActiveXObject */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nvar global = this;\nvar channelId = Math.floor(Math.random() * 10000); // randomize the initial id in case of multiple closures loaded \nvar emptyFn = Function.prototype;\nvar reURI = /^((http.?:)\\/\\/([^:\\/\\s]+)(:\\d+)*)/; // returns groups for protocol (2), domain (3) and port (4) \nvar reParent = /[\\-\\w]+\\/\\.\\.\\//; // matches a foo/../ expression \nvar reDoubleSlash = /([^:])\\/\\//g; // matches // anywhere but in the protocol\nvar namespace = \"\"; // stores namespace under which easyXDM object is stored on the page (empty if object is global)\nvar easyXDM = {};\nvar _easyXDM = window.easyXDM; // map over global easyXDM in case of overwrite\nvar IFRAME_PREFIX = \"easyXDM_\";\nvar HAS_NAME_PROPERTY_BUG;\nvar useHash = false; // whether to use the hash over the query\nvar flashVersion; // will be set if using flash\nvar HAS_FLASH_THROTTLED_BUG;\nvar _trace = emptyFn;\n\n\n// http://peter.michaux.ca/articles/feature-detection-state-of-the-art-browser-scripting\nfunction isHostMethod(object, property){\n    var t = typeof object[property];\n    return t == 'function' ||\n    (!!(t == 'object' && object[property])) ||\n    t == 'unknown';\n}\n\nfunction isHostObject(object, property){\n    return !!(typeof(object[property]) == 'object' && object[property]);\n}\n\n// end\n\n// http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\nfunction isArray(o){\n    return Object.prototype.toString.call(o) === '[object Array]';\n}\n\n// end\nfunction hasFlash(){\n    var name = \"Shockwave Flash\", mimeType = \"application/x-shockwave-flash\";\n    \n    if (!undef(navigator.plugins) && typeof navigator.plugins[name] == \"object\") {\n        // adapted from the swfobject code\n        var description = navigator.plugins[name].description;\n        if (description && !undef(navigator.mimeTypes) && navigator.mimeTypes[mimeType] && navigator.mimeTypes[mimeType].enabledPlugin) {\n            flashVersion = description.match(/\\d+/g);\n        }\n    }\n    if (!flashVersion) {\n        var flash;\n        try {\n            flash = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash\");\n            flashVersion = Array.prototype.slice.call(flash.GetVariable(\"$version\").match(/(\\d+),(\\d+),(\\d+),(\\d+)/), 1);\n            flash = null;\n        } \n        catch (notSupportedException) {\n        }\n    }\n    if (!flashVersion) {\n        return false;\n    }\n    var major = parseInt(flashVersion[0], 10), minor = parseInt(flashVersion[1], 10);\n    HAS_FLASH_THROTTLED_BUG = major > 9 && minor > 0;\n    return true;\n}\n\n/*\n * Cross Browser implementation for adding and removing event listeners.\n */\nvar on, un;\nif (isHostMethod(window, \"addEventListener\")) {\n    on = function(target, type, listener){\n        _trace(\"adding listener \" + type);\n        target.addEventListener(type, listener, false);\n    };\n    un = function(target, type, listener){\n        _trace(\"removing listener \" + type);\n        target.removeEventListener(type, listener, false);\n    };\n}\nelse if (isHostMethod(window, \"attachEvent\")) {\n    on = function(object, sEvent, fpNotify){\n        _trace(\"adding listener \" + sEvent);\n        object.attachEvent(\"on\" + sEvent, fpNotify);\n    };\n    un = function(object, sEvent, fpNotify){\n        _trace(\"removing listener \" + sEvent);\n        object.detachEvent(\"on\" + sEvent, fpNotify);\n    };\n}\nelse {\n    throw new Error(\"Browser not supported\");\n}\n\n/*\n * Cross Browser implementation of DOMContentLoaded.\n */\nvar domIsReady = false, domReadyQueue = [], readyState;\nif (\"readyState\" in document) {\n    // If browser is WebKit-powered, check for both 'loaded' (legacy browsers) and\n    // 'interactive' (HTML5 specs, recent WebKit builds) states.\n    // https://bugs.webkit.org/show_bug.cgi?id=45119\n    readyState = document.readyState;\n    domIsReady = readyState == \"complete\" || (~ navigator.userAgent.indexOf('AppleWebKit/') && (readyState == \"loaded\" || readyState == \"interactive\"));\n}\nelse {\n    // If readyState is not supported in the browser, then in order to be able to fire whenReady functions apropriately\n    // when added dynamically _after_ DOM load, we have to deduce wether the DOM is ready or not.\n    // We only need a body to add elements to, so the existence of document.body is enough for us.\n    domIsReady = !!document.body;\n}\n\nfunction dom_onReady(){\n    if (domIsReady) {\n        return;\n    }\n    domIsReady = true;\n    _trace(\"firing dom_onReady\");\n    for (var i = 0; i < domReadyQueue.length; i++) {\n        domReadyQueue[i]();\n    }\n    domReadyQueue.length = 0;\n}\n\n\nif (!domIsReady) {\n    if (isHostMethod(window, \"addEventListener\")) {\n        on(document, \"DOMContentLoaded\", dom_onReady);\n    }\n    else {\n        on(document, \"readystatechange\", function(){\n            if (document.readyState == \"complete\") {\n                dom_onReady();\n            }\n        });\n        if (document.documentElement.doScroll && window === top) {\n            var doScrollCheck = function(){\n                if (domIsReady) {\n                    return;\n                }\n                // http://javascript.nwbox.com/IEContentLoaded/\n                try {\n                    document.documentElement.doScroll(\"left\");\n                } \n                catch (e) {\n                    setTimeout(doScrollCheck, 1);\n                    return;\n                }\n                dom_onReady();\n            };\n            doScrollCheck();\n        }\n    }\n    \n    // A fallback to window.onload, that will always work\n    on(window, \"load\", dom_onReady);\n}\n/**\n * This will add a function to the queue of functions to be run once the DOM reaches a ready state.\n * If functions are added after this event then they will be executed immediately.\n * @param {function} fn The function to add\n * @param {Object} scope An optional scope for the function to be called with.\n */\nfunction whenReady(fn, scope){\n    if (domIsReady) {\n        fn.call(scope);\n        return;\n    }\n    domReadyQueue.push(function(){\n        fn.call(scope);\n    });\n}\n\n/**\n * Returns an instance of easyXDM from the parent window with\n * respect to the namespace.\n *\n * @return An instance of easyXDM (in the parent window)\n */\nfunction getParentObject(){\n    var obj = parent;\n    if (namespace !== \"\") {\n        for (var i = 0, ii = namespace.split(\".\"); i < ii.length; i++) {\n            if (!obj) {\n                throw new Error(ii.slice(0, i + 1).join('.') + ' is not an object');\n            }\n            obj = obj[ii[i]];\n        }\n    }\n    if (!obj || !obj.easyXDM) {\n        throw new Error('Could not find easyXDM in parent.' + namespace);\n    }\n    return obj.easyXDM;\n}\n\n/**\n * Removes easyXDM variable from the global scope. It also returns control\n * of the easyXDM variable to whatever code used it before.\n *\n * @param {String} ns A string representation of an object that will hold\n *                    an instance of easyXDM.\n * @return An instance of easyXDM\n */\nfunction noConflict(ns){\n    if (typeof ns != \"string\" || !ns) {\n        throw new Error('namespace must be a non-empty string');\n    }\n    _trace(\"Settings namespace to '\" + ns + \"'\");\n    \n    window.easyXDM = _easyXDM;\n    namespace = ns;\n    if (namespace) {\n        IFRAME_PREFIX = \"easyXDM_\" + namespace.replace(\".\", \"_\") + \"_\";\n    }\n    return easyXDM;\n}\n\n/*\n * Methods for working with URLs\n */\n/**\n * Get the domain name from a url.\n * @param {String} url The url to extract the domain from.\n * @return The domain part of the url.\n * @type {String}\n */\nfunction getDomainName(url){\n    if (!url) {\n        throw new Error(\"url is undefined or empty\");\n    }\n    return url.match(reURI)[3];\n}\n\n/**\n * Get the port for a given URL, or \"\" if none\n * @param {String} url The url to extract the port from.\n * @return The port part of the url.\n * @type {String}\n */\nfunction getPort(url){\n    if (!url) {\n        throw new Error(\"url is undefined or empty\");\n    }\n    return url.match(reURI)[4] || \"\";\n}\n\n/**\n * Returns  a string containing the schema, domain and if present the port\n * @param {String} url The url to extract the location from\n * @return {String} The location part of the url\n */\nfunction getLocation(url){\n    if (!url) {\n        throw new Error(\"url is undefined or empty\");\n    }\n    if (/^file/.test(url)) {\n        throw new Error(\"The file:// protocol is not supported\");\n    }\n    var m = url.toLowerCase().match(reURI);\n    var proto = m[2], domain = m[3], port = m[4] || \"\";\n    if ((proto == \"http:\" && port == \":80\") || (proto == \"https:\" && port == \":443\")) {\n        port = \"\";\n    }\n    return proto + \"//\" + domain + port;\n}\n\n/**\n * Resolves a relative url into an absolute one.\n * @param {String} url The path to resolve.\n * @return {String} The resolved url.\n */\nfunction resolveUrl(url){\n    if (!url) {\n        throw new Error(\"url is undefined or empty\");\n    }\n    \n    // replace all // except the one in proto with /\n    url = url.replace(reDoubleSlash, \"$1/\");\n    \n    // If the url is a valid url we do nothing\n    if (!url.match(/^(http||https):\\/\\//)) {\n        // If this is a relative path\n        var path = (url.substring(0, 1) === \"/\") ? \"\" : location.pathname;\n        if (path.substring(path.length - 1) !== \"/\") {\n            path = path.substring(0, path.lastIndexOf(\"/\") + 1);\n        }\n        \n        url = location.protocol + \"//\" + location.host + path + url;\n    }\n    \n    // reduce all 'xyz/../' to just '' \n    while (reParent.test(url)) {\n        url = url.replace(reParent, \"\");\n    }\n    \n    _trace(\"resolved url '\" + url + \"'\");\n    return url;\n}\n\n/**\n * Appends the parameters to the given url.<br/>\n * The base url can contain existing query parameters.\n * @param {String} url The base url.\n * @param {Object} parameters The parameters to add.\n * @return {String} A new valid url with the parameters appended.\n */\nfunction appendQueryParameters(url, parameters){\n    if (!parameters) {\n        throw new Error(\"parameters is undefined or null\");\n    }\n    \n    var hash = \"\", indexOf = url.indexOf(\"#\");\n    if (indexOf !== -1) {\n        hash = url.substring(indexOf);\n        url = url.substring(0, indexOf);\n    }\n    var q = [];\n    for (var key in parameters) {\n        if (parameters.hasOwnProperty(key)) {\n            q.push(key + \"=\" + encodeURIComponent(parameters[key]));\n        }\n    }\n    return url + (useHash ? \"#\" : (url.indexOf(\"?\") == -1 ? \"?\" : \"&\")) + q.join(\"&\") + hash;\n}\n\n\n// build the query object either from location.query, if it contains the xdm_e argument, or from location.hash\nvar query = (function(input){\n    input = input.substring(1).split(\"&\");\n    var data = {}, pair, i = input.length;\n    while (i--) {\n        pair = input[i].split(\"=\");\n        data[pair[0]] = decodeURIComponent(pair[1]);\n    }\n    return data;\n}(/xdm_e=/.test(location.search) ? location.search : location.hash));\n\n/*\n * Helper methods\n */\n/**\n * Helper for checking if a variable/property is undefined\n * @param {Object} v The variable to test\n * @return {Boolean} True if the passed variable is undefined\n */\nfunction undef(v){\n    return typeof v === \"undefined\";\n}\n\n/**\n * A safe implementation of HTML5 JSON. Feature testing is used to make sure the implementation works.\n * @return {JSON} A valid JSON conforming object, or null if not found.\n */\nvar getJSON = function(){\n    var cached = {};\n    var obj = {\n        a: [1, 2, 3]\n    }, json = \"{\\\"a\\\":[1,2,3]}\";\n    \n    if (typeof JSON != \"undefined\" && typeof JSON.stringify === \"function\" && JSON.stringify(obj).replace((/\\s/g), \"\") === json) {\n        // this is a working JSON instance\n        return JSON;\n    }\n    if (Object.toJSON) {\n        if (Object.toJSON(obj).replace((/\\s/g), \"\") === json) {\n            // this is a working stringify method\n            cached.stringify = Object.toJSON;\n        }\n    }\n    \n    if (typeof String.prototype.evalJSON === \"function\") {\n        obj = json.evalJSON();\n        if (obj.a && obj.a.length === 3 && obj.a[2] === 3) {\n            // this is a working parse method           \n            cached.parse = function(str){\n                return str.evalJSON();\n            };\n        }\n    }\n    \n    if (cached.stringify && cached.parse) {\n        // Only memoize the result if we have valid instance\n        getJSON = function(){\n            return cached;\n        };\n        return cached;\n    }\n    return null;\n};\n\n/**\n * Applies properties from the source object to the target object.<br/>\n * @param {Object} target The target of the properties.\n * @param {Object} source The source of the properties.\n * @param {Boolean} noOverwrite Set to True to only set non-existing properties.\n */\nfunction apply(destination, source, noOverwrite){\n    var member;\n    for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n            if (prop in destination) {\n                member = source[prop];\n                if (typeof member === \"object\") {\n                    apply(destination[prop], member, noOverwrite);\n                }\n                else if (!noOverwrite) {\n                    destination[prop] = source[prop];\n                }\n            }\n            else {\n                destination[prop] = source[prop];\n            }\n        }\n    }\n    return destination;\n}\n\n// This tests for the bug in IE where setting the [name] property using javascript causes the value to be redirected into [submitName].\nfunction testForNamePropertyBug(){\n    var form = document.body.appendChild(document.createElement(\"form\")), input = form.appendChild(document.createElement(\"input\"));\n    input.name = IFRAME_PREFIX + \"TEST\" + channelId; // append channelId in order to avoid caching issues\n    HAS_NAME_PROPERTY_BUG = input !== form.elements[input.name];\n    document.body.removeChild(form);\n    _trace(\"HAS_NAME_PROPERTY_BUG: \" + HAS_NAME_PROPERTY_BUG);\n}\n\n/**\n * Creates a frame and appends it to the DOM.\n * @param config {object} This object can have the following properties\n * <ul>\n * <li> {object} prop The properties that should be set on the frame. This should include the 'src' property.</li>\n * <li> {object} attr The attributes that should be set on the frame.</li>\n * <li> {DOMElement} container Its parent element (Optional).</li>\n * <li> {function} onLoad A method that should be called with the frames contentWindow as argument when the frame is fully loaded. (Optional)</li>\n * </ul>\n * @return The frames DOMElement\n * @type DOMElement\n */\nfunction createFrame(config){\n    _trace(\"creating frame: \" + config.props.src);\n    if (undef(HAS_NAME_PROPERTY_BUG)) {\n        testForNamePropertyBug();\n    }\n    var frame;\n    // This is to work around the problems in IE6/7 with setting the name property. \n    // Internally this is set as 'submitName' instead when using 'iframe.name = ...'\n    // This is not required by easyXDM itself, but is to facilitate other use cases \n    if (HAS_NAME_PROPERTY_BUG) {\n        frame = document.createElement(\"<iframe name=\\\"\" + config.props.name + \"\\\"/>\");\n    }\n    else {\n        frame = document.createElement(\"IFRAME\");\n        frame.name = config.props.name;\n    }\n    \n    frame.id = frame.name = config.props.name;\n\n    // (jca) Customization needed for full screen video playing.  Requires IE8+, find new solution for IE7 compatibility mode.\n    frame.setAttribute('allowfullscreen', '');\n    frame.setAttribute('mozallowfullscreen', '');\n    frame.setAttribute('webkitallowfullscreen', '');\n    frame.setAttribute('oallowfullscreen', '');\n    frame.setAttribute('msallowfullscreen', '');\n\n    delete config.props.name;\n    \n    if (typeof config.container == \"string\") {\n        config.container = document.getElementById(config.container);\n    }\n    \n    if (!config.container) {\n        // This needs to be hidden like this, simply setting display:none and the like will cause failures in some browsers.\n        apply(frame.style, {\n            position: \"absolute\",\n            top: \"-2000px\",\n            // Avoid potential horizontal scrollbar\n            left: \"0px\"\n        });\n        config.container = document.body;\n    }\n    \n    // HACK: IE cannot have the src attribute set when the frame is appended\n    //       into the container, so we set it to \"javascript:false\" as a\n    //       placeholder for now.  If we left the src undefined, it would\n    //       instead default to \"about:blank\", which causes SSL mixed-content\n    //       warnings in IE6 when on an SSL parent page.\n    var src = config.props.src;\n    config.props.src = \"javascript:false\";\n    \n    // transfer properties to the frame\n    apply(frame, config.props);\n    \n    frame.border = frame.frameBorder = 0;\n    frame.allowTransparency = true;\n    config.container.appendChild(frame);\n    \n    if (config.onLoad) {\n        on(frame, \"load\", config.onLoad);\n    }\n    \n    // set the frame URL to the proper value (we previously set it to\n    // \"javascript:false\" to work around the IE issue mentioned above)\n    if(config.usePost) {\n        var form = config.container.appendChild(document.createElement('form')), input;\n        form.target = frame.name;\n        form.action = src;\n        form.method = 'POST';\n        if (typeof(config.usePost) === 'object') {\n            for (var i in config.usePost) {\n                if (config.usePost.hasOwnProperty(i)) {\n                    if (HAS_NAME_PROPERTY_BUG) {\n                        input = document.createElement('<input name=\"' + i + '\"/>');\n                    } else {\n                        input = document.createElement(\"INPUT\");\n                        input.name = i;\n                    }\n                    input.value = config.usePost[i];\n                    form.appendChild(input);\n                }\n            }\n        }\n        form.submit();\n        form.parentNode.removeChild(form);\n    } else {\n        frame.src = src;\n    }\n    config.props.src = src;\n    \n    return frame;\n}\n\n/**\n * Check whether a domain is allowed using an Access Control List.\n * The ACL can contain * and ? as wildcards, or can be regular expressions.\n * If regular expressions they need to begin with ^ and end with $.\n * @param {Array/String} acl The list of allowed domains\n * @param {String} domain The domain to test.\n * @return {Boolean} True if the domain is allowed, false if not.\n */\nfunction checkAcl(acl, domain){\n    // normalize into an array\n    if (typeof acl == \"string\") {\n        acl = [acl];\n    }\n    var re, i = acl.length;\n    while (i--) {\n        re = acl[i];\n        re = new RegExp(re.substr(0, 1) == \"^\" ? re : (\"^\" + re.replace(/(\\*)/g, \".$1\").replace(/\\?/g, \".\") + \"$\"));\n        if (re.test(domain)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/*\n * Functions related to stacks\n */\n/**\n * Prepares an array of stack-elements suitable for the current configuration\n * @param {Object} config The Transports configuration. See easyXDM.Socket for more.\n * @return {Array} An array of stack-elements with the TransportElement at index 0.\n */\nfunction prepareTransportStack(config){\n    var protocol = config.protocol, stackEls;\n    config.isHost = config.isHost || undef(query.xdm_p);\n    useHash = config.hash || false;\n    _trace(\"preparing transport stack\");\n    \n    if (!config.props) {\n        config.props = {};\n    }\n    if (!config.isHost) {\n        _trace(\"using parameters from query\");\n        config.channel = query.xdm_c.replace(/[\"'<>\\\\]/g, \"\");\n        config.secret = query.xdm_s;\n        config.remote = query.xdm_e.replace(/[\"'<>\\\\]/g, \"\");\n        ;\n        protocol = query.xdm_p;\n        if (config.acl && !checkAcl(config.acl, config.remote)) {\n            throw new Error(\"Access denied for \" + config.remote);\n        }\n    }\n    else {\n        config.remote = resolveUrl(config.remote);\n        config.channel = config.channel || \"default\" + channelId++;\n        config.secret = Math.random().toString(16).substring(2);\n        if (undef(protocol)) {\n            if (getLocation(location.href) == getLocation(config.remote)) {\n                /*\n                 * Both documents has the same origin, lets use direct access.\n                 */\n                protocol = \"4\";\n            }\n            else if (isHostMethod(window, \"postMessage\") || isHostMethod(document, \"postMessage\")) {\n                /*\n                 * This is supported in IE8+, Firefox 3+, Opera 9+, Chrome 2+ and Safari 4+\n                 */\n                protocol = \"1\";\n            }\n            else if (config.swf && isHostMethod(window, \"ActiveXObject\") && hasFlash()) {\n                /*\n                 * The Flash transport superseedes the NixTransport as the NixTransport has been blocked by MS\n                 */\n                protocol = \"6\";\n            }\n            else if (navigator.product === \"Gecko\" && \"frameElement\" in window && navigator.userAgent.indexOf('WebKit') == -1) {\n                /*\n                 * This is supported in Gecko (Firefox 1+)\n                 */\n                protocol = \"5\";\n            }\n            else if (config.remoteHelper) {\n                /*\n                 * This is supported in all browsers that retains the value of window.name when\n                 * navigating from one domain to another, and where parent.frames[foo] can be used\n                 * to get access to a frame from the same domain\n                 */\n                protocol = \"2\";\n            }\n            else {\n                /*\n                 * This is supported in all browsers where [window].location is writable for all\n                 * The resize event will be used if resize is supported and the iframe is not put\n                 * into a container, else polling will be used.\n                 */\n                protocol = \"0\";\n            }\n            _trace(\"selecting protocol: \" + protocol);\n        }\n        else {\n            _trace(\"using protocol: \" + protocol);\n        }\n    }\n    config.protocol = protocol; // for conditional branching\n    switch (protocol) {\n        case \"0\":// 0 = HashTransport\n            apply(config, {\n                interval: 100,\n                delay: 2000,\n                useResize: true,\n                useParent: false,\n                usePolling: false\n            }, true);\n            if (config.isHost) {\n                if (!config.local) {\n                    _trace(\"looking for image to use as local\");\n                    // If no local is set then we need to find an image hosted on the current domain\n                    var domain = location.protocol + \"//\" + location.host, images = document.body.getElementsByTagName(\"img\"), image;\n                    var i = images.length;\n                    while (i--) {\n                        image = images[i];\n                        if (image.src.substring(0, domain.length) === domain) {\n                            config.local = image.src;\n                            break;\n                        }\n                    }\n                    if (!config.local) {\n                        _trace(\"no image found, defaulting to using the window\");\n                        // If no local was set, and we are unable to find a suitable file, then we resort to using the current window \n                        config.local = window;\n                    }\n                }\n                \n                var parameters = {\n                    xdm_c: config.channel,\n                    xdm_p: 0\n                };\n                \n                if (config.local === window) {\n                    // We are using the current window to listen to\n                    config.usePolling = true;\n                    config.useParent = true;\n                    config.local = location.protocol + \"//\" + location.host + location.pathname + location.search;\n                    parameters.xdm_e = config.local;\n                    parameters.xdm_pa = 1; // use parent\n                }\n                else {\n                    parameters.xdm_e = resolveUrl(config.local);\n                }\n                \n                if (config.container) {\n                    config.useResize = false;\n                    parameters.xdm_po = 1; // use polling\n                }\n                config.remote = appendQueryParameters(config.remote, parameters);\n            }\n            else {\n                apply(config, {\n                    useParent: !undef(query.xdm_pa),\n                    usePolling: !undef(query.xdm_po),\n                    useResize: config.useParent ? false : config.useResize\n                });\n            }\n            stackEls = [new easyXDM.stack.HashTransport(config), new easyXDM.stack.ReliableBehavior({}), new easyXDM.stack.QueueBehavior({\n                encode: true,\n                maxLength: 4000 - config.remote.length\n            }), new easyXDM.stack.VerifyBehavior({\n                initiate: config.isHost\n            })];\n            break;\n        case \"1\":\n            stackEls = [new easyXDM.stack.PostMessageTransport(config)];\n            break;\n        case \"2\":\n            if (config.isHost) {\n                config.remoteHelper = resolveUrl(config.remoteHelper);\n            }\n            stackEls = [new easyXDM.stack.NameTransport(config), new easyXDM.stack.QueueBehavior(), new easyXDM.stack.VerifyBehavior({\n                initiate: config.isHost\n            })];\n            break;\n        case \"3\":\n            stackEls = [new easyXDM.stack.NixTransport(config)];\n            break;\n        case \"4\":\n            stackEls = [new easyXDM.stack.SameOriginTransport(config)];\n            break;\n        case \"5\":\n            stackEls = [new easyXDM.stack.FrameElementTransport(config)];\n            break;\n        case \"6\":\n            if (!flashVersion) {\n                hasFlash();\n            }\n            stackEls = [new easyXDM.stack.FlashTransport(config)];\n            break;\n    }\n    // this behavior is responsible for buffering outgoing messages, and for performing lazy initialization\n    stackEls.push(new easyXDM.stack.QueueBehavior({\n        lazy: config.lazy,\n        remove: true\n    }));\n    return stackEls;\n}\n\n/**\n * Chains all the separate stack elements into a single usable stack.<br/>\n * If an element is missing a necessary method then it will have a pass-through method applied.\n * @param {Array} stackElements An array of stack elements to be linked.\n * @return {easyXDM.stack.StackElement} The last element in the chain.\n */\nfunction chainStack(stackElements){\n    var stackEl, defaults = {\n        incoming: function(message, origin){\n            this.up.incoming(message, origin);\n        },\n        outgoing: function(message, recipient){\n            this.down.outgoing(message, recipient);\n        },\n        callback: function(success){\n            this.up.callback(success);\n        },\n        init: function(){\n            this.down.init();\n        },\n        destroy: function(){\n            this.down.destroy();\n        }\n    };\n    for (var i = 0, len = stackElements.length; i < len; i++) {\n        stackEl = stackElements[i];\n        apply(stackEl, defaults, true);\n        if (i !== 0) {\n            stackEl.down = stackElements[i - 1];\n        }\n        if (i !== len - 1) {\n            stackEl.up = stackElements[i + 1];\n        }\n    }\n    return stackEl;\n}\n\n/**\n * This will remove a stackelement from its stack while leaving the stack functional.\n * @param {Object} element The elment to remove from the stack.\n */\nfunction removeFromStack(element){\n    element.up.down = element.down;\n    element.down.up = element.up;\n    element.up = element.down = null;\n}\n\n/*\n * Export the main object and any other methods applicable\n */\n/** \n * @class easyXDM\n * A javascript library providing cross-browser, cross-domain messaging/RPC.\n * @version 2.4.20.7\n * @singleton\n */\napply(easyXDM, {\n    /**\n     * The version of the library\n     * @type {string}\n     */\n    version: \"2.4.20.7\",\n    /**\n     * This is a map containing all the query parameters passed to the document.\n     * All the values has been decoded using decodeURIComponent.\n     * @type {object}\n     */\n    query: query,\n    /**\n     * @private\n     */\n    stack: {},\n    /**\n     * Applies properties from the source object to the target object.<br/>\n     * @param {object} target The target of the properties.\n     * @param {object} source The source of the properties.\n     * @param {boolean} noOverwrite Set to True to only set non-existing properties.\n     */\n    apply: apply,\n    \n    /**\n     * A safe implementation of HTML5 JSON. Feature testing is used to make sure the implementation works.\n     * @return {JSON} A valid JSON conforming object, or null if not found.\n     */\n    getJSONObject: getJSON,\n    /**\n     * This will add a function to the queue of functions to be run once the DOM reaches a ready state.\n     * If functions are added after this event then they will be executed immediately.\n     * @param {function} fn The function to add\n     * @param {object} scope An optional scope for the function to be called with.\n     */\n    whenReady: whenReady,\n    /**\n     * Removes easyXDM variable from the global scope. It also returns control\n     * of the easyXDM variable to whatever code used it before.\n     *\n     * @param {String} ns A string representation of an object that will hold\n     *                    an instance of easyXDM.\n     * @return An instance of easyXDM\n     */\n    noConflict: noConflict\n});\n\n// Expose helper functions so we can test them\napply(easyXDM, {\n    checkAcl: checkAcl,\n    getDomainName: getDomainName,\n    getLocation: getLocation,\n    appendQueryParameters: appendQueryParameters\n});\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global console, _FirebugCommandLine,  easyXDM, window, escape, unescape, isHostObject, undef, _trace, domIsReady, emptyFn, namespace */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nvar debug = {\n    _deferred: [],\n    flush: function(){\n        this.trace(\"... deferred messages ...\");\n        for (var i = 0, len = this._deferred.length; i < len; i++) {\n            this.trace(this._deferred[i]);\n        }\n        this._deferred.length = 0;\n        this.trace(\"... end of deferred messages ...\");\n    },\n    getTime: function(){\n        var d = new Date(), h = d.getHours() + \"\", m = d.getMinutes() + \"\", s = d.getSeconds() + \"\", ms = d.getMilliseconds() + \"\", zeros = \"000\";\n        if (h.length == 1) {\n            h = \"0\" + h;\n        }\n        if (m.length == 1) {\n            m = \"0\" + m;\n        }\n        if (s.length == 1) {\n            s = \"0\" + s;\n        }\n        ms = zeros.substring(ms.length) + ms;\n        return h + \":\" + m + \":\" + s + \".\" + ms;\n    },\n    /**\n     * Logs the message to console.log if available\n     * @param {String} msg The message to log\n     */\n    log: function(msg){\n        // Uses memoizing to cache the implementation\n        if (!isHostObject(window, \"console\") || undef(console.log)) {\n            /**\n             * Sets log to be an empty function since we have no output available\n             * @ignore\n             */\n            this.log = emptyFn;\n        }\n        else {\n            /**\n             * Sets log to be a wrapper around console.log\n             * @ignore\n             * @param {String} msg\n             */\n            this.log = function(msg){\n                console.log(location.host + (namespace ? \":\" + namespace : \"\") + \" - \" + this.getTime() + \": \" + msg);\n            };\n        }\n        this.log(msg);\n    },\n    /**\n     * Will try to trace the given message either to a DOMElement with the id \"log\",\n     * or by using console.info.\n     * @param {String} msg The message to trace\n     */\n    trace: function(msg){\n        // Uses memoizing to cache the implementation\n        if (!domIsReady) {\n            if (this._deferred.length === 0) {\n                easyXDM.whenReady(debug.flush, debug);\n            }\n            this._deferred.push(msg);\n            this.log(msg);\n        }\n        else {\n            var el = document.getElementById(\"log\");\n            // is there a log element present?\n            if (el) {\n                /**\n                 * Sets trace to be a function that outputs the messages to the DOMElement with id \"log\"\n                 * @ignore\n                 * @param {String} msg\n                 */\n                this.trace = function(msg){\n                    try {\n                        el.appendChild(document.createElement(\"div\")).appendChild(document.createTextNode(location.host + (namespace ? \":\" + namespace : \"\") + \" - \" + this.getTime() + \":\" + msg));\n                        el.scrollTop = el.scrollHeight;\n                    } \n                    catch (e) {\n                        //In case we are unloading\n                    }\n                };\n            }\n            else if (isHostObject(window, \"console\") && !undef(console.info)) {\n                /**\n                 * Sets trace to be a wrapper around console.info\n                 * @ignore\n                 * @param {String} msg\n                 */\n                this.trace = function(msg){\n                    console.info(location.host + (namespace ? \":\" + namespace : \"\") + \" - \" + this.getTime() + \":\" + msg);\n                };\n            }\n            else {\n                /**\n                 * Create log window\n                 * @ignore\n                 */\n                var domain = location.host, windowname = domain.replace(/[\\-.:]/g, \"\") + \"easyxdm_log\", logWin;\n                try {\n                    logWin = window.open(\"\", windowname, \"width=800,height=200,status=0,navigation=0,scrollbars=1\");\n                } \n                catch (e) {\n                }\n                if (logWin) {\n                    var doc = logWin.document;\n                    el = doc.getElementById(\"log\");\n                    if (!el) {\n                        doc.write(\"<html><head><title>easyXDM log \" + domain + \"</title></head>\");\n                        doc.write(\"<body><div id=\\\"log\\\"></div></body></html>\");\n                        doc.close();\n                        el = doc.getElementById(\"log\");\n                    }\n                    this.trace = function(msg){\n                        try {\n                            el.appendChild(doc.createElement(\"div\")).appendChild(doc.createTextNode(location.host + (namespace ? \":\" + namespace : \"\") + \" - \" + this.getTime() + \":\" + msg));\n                            el.scrollTop = el.scrollHeight;\n                        } \n                        catch (e) {\n                            //In case we are unloading\n                        }\n                    };\n                    this.trace(\"---- new logger at \" + location.href);\n                }\n                \n                if (!el) {\n                    // We are unable to use any logging\n                    this.trace = emptyFn;\n                }\n            }\n            this.trace(msg);\n        }\n    },\n    /**\n     * Creates a method usable for tracing.\n     * @param {String} name The name the messages should be marked with\n     * @return {Function} A function that accepts a single string as argument.\n     */\n    getTracer: function(name){\n        return function(msg){\n            debug.trace(name + \": \" + msg);\n        };\n    }\n};\ndebug.log(\"easyXDM present on '\" + location.href);\neasyXDM.Debug = debug;\n_trace = debug.getTracer(\"{Private}\");\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, isHostObject, isHostMethod, un, on, createFrame, debug */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/** \n * @class easyXDM.DomHelper\n * Contains methods for dealing with the DOM\n * @singleton\n */\neasyXDM.DomHelper = {\n    /**\n     * Provides a consistent interface for adding eventhandlers\n     * @param {Object} target The target to add the event to\n     * @param {String} type The name of the event\n     * @param {Function} listener The listener\n     */\n    on: on,\n    /**\n     * Provides a consistent interface for removing eventhandlers\n     * @param {Object} target The target to remove the event from\n     * @param {String} type The name of the event\n     * @param {Function} listener The listener\n     */\n    un: un,\n    /**\n     * Checks for the presence of the JSON object.\n     * If it is not present it will use the supplied path to load the JSON2 library.\n     * This should be called in the documents head right after the easyXDM script tag.\n     * http://json.org/json2.js\n     * @param {String} path A valid path to json2.js\n     */\n    requiresJSON: function(path){\n        if (!isHostObject(window, \"JSON\")) {\n            debug.log(\"loading external JSON\");\n            // we need to encode the < in order to avoid an illegal token error\n            // when the script is inlined in a document.\n            document.write('<' + 'script type=\"text/javascript\" src=\"' + path + '\"><' + '/script>');\n        }\n        else {\n            debug.log(\"native JSON found\");\n        }\n    }\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, debug */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n(function(){\n    // The map containing the stored functions\n    var _map = {};\n    \n    /**\n     * @class easyXDM.Fn\n     * This contains methods related to function handling, such as storing callbacks.\n     * @singleton\n     * @namespace easyXDM\n     */\n    easyXDM.Fn = {\n        /**\n         * Stores a function using the given name for reference\n         * @param {String} name The name that the function should be referred by\n         * @param {Function} fn The function to store\n         * @namespace easyXDM.fn\n         */\n        set: function(name, fn){\n            this._trace(\"storing function \" + name);\n            _map[name] = fn;\n        },\n        /**\n         * Retrieves the function referred to by the given name\n         * @param {String} name The name of the function to retrieve\n         * @param {Boolean} del If the function should be deleted after retrieval\n         * @return {Function} The stored function\n         * @namespace easyXDM.fn\n         */\n        get: function(name, del){\n            this._trace(\"retrieving function \" + name);\n            if (!_map.hasOwnProperty(name)) {\n                return;\n            }\n            var fn = _map[name];\n            if (!fn) {\n                this._trace(name + \" not found\");\n            }\n            \n            if (del) {\n                delete _map[name];\n            }\n            return fn;\n        }\n    };\n    \n    easyXDM.Fn._trace = debug.getTracer(\"easyXDM.Fn\");\n}());\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, chainStack, prepareTransportStack, getLocation, debug */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.Socket\n * This class creates a transport channel between two domains that is usable for sending and receiving string-based messages.<br/>\n * The channel is reliable, supports queueing, and ensures that the message originates from the expected domain.<br/>\n * Internally different stacks will be used depending on the browsers features and the available parameters.\n * <h2>How to set up</h2>\n * Setting up the provider:\n * <pre><code>\n * var socket = new easyXDM.Socket({\n * &nbsp; local: \"name.html\",\n * &nbsp; onReady: function(){\n * &nbsp; &nbsp; &#47;&#47; you need to wait for the onReady callback before using the socket\n * &nbsp; &nbsp; socket.postMessage(\"foo-message\");\n * &nbsp; },\n * &nbsp; onMessage: function(message, origin) {\n * &nbsp;&nbsp; alert(\"received \" + message + \" from \" + origin);\n * &nbsp; }\n * });\n * </code></pre>\n * Setting up the consumer:\n * <pre><code>\n * var socket = new easyXDM.Socket({\n * &nbsp; remote: \"http:&#47;&#47;remotedomain/page.html\",\n * &nbsp; remoteHelper: \"http:&#47;&#47;remotedomain/name.html\",\n * &nbsp; onReady: function(){\n * &nbsp; &nbsp; &#47;&#47; you need to wait for the onReady callback before using the socket\n * &nbsp; &nbsp; socket.postMessage(\"foo-message\");\n * &nbsp; },\n * &nbsp; onMessage: function(message, origin) {\n * &nbsp;&nbsp; alert(\"received \" + message + \" from \" + origin);\n * &nbsp; }\n * });\n * </code></pre>\n * If you are unable to upload the <code>name.html</code> file to the consumers domain then remove the <code>remoteHelper</code> property\n * and easyXDM will fall back to using the HashTransport instead of the NameTransport when not able to use any of the primary transports.\n * @namespace easyXDM\n * @constructor\n * @cfg {String/Window} local The url to the local name.html document, a local static file, or a reference to the local window.\n * @cfg {Boolean} lazy (Consumer only) Set this to true if you want easyXDM to defer creating the transport until really needed. \n * @cfg {String} remote (Consumer only) The url to the providers document.\n * @cfg {String} remoteHelper (Consumer only) The url to the remote name.html file. This is to support NameTransport as a fallback. Optional.\n * @cfg {Number} delay The number of milliseconds easyXDM should try to get a reference to the local window.  Optional, defaults to 2000.\n * @cfg {Number} interval The interval used when polling for messages. Optional, defaults to 300.\n * @cfg {String} channel (Consumer only) The name of the channel to use. Can be used to set consistent iframe names. Must be unique. Optional.\n * @cfg {Function} onMessage The method that should handle incoming messages.<br/> This method should accept two arguments, the message as a string, and the origin as a string. Optional.\n * @cfg {Function} onReady A method that should be called when the transport is ready. Optional.\n * @cfg {DOMElement|String} container (Consumer only) The element, or the id of the element that the primary iframe should be inserted into. If not set then the iframe will be positioned off-screen. Optional.\n * @cfg {Array/String} acl (Provider only) Here you can specify which '[protocol]://[domain]' patterns that should be allowed to act as the consumer towards this provider.<br/>\n * This can contain the wildcards ? and *.  Examples are 'http://example.com', '*.foo.com' and '*dom?.com'. If you want to use reqular expressions then you pattern needs to start with ^ and end with $.\n * If none of the patterns match an Error will be thrown.  \n * @cfg {Object} props (Consumer only) Additional properties that should be applied to the iframe. This can also contain nested objects e.g: <code>{style:{width:\"100px\", height:\"100px\"}}</code>. \n * Properties such as 'name' and 'src' will be overrided. Optional.\n */\neasyXDM.Socket = function(config){\n    var trace = debug.getTracer(\"easyXDM.Socket\");\n    trace(\"constructor\");\n    \n    // create the stack\n    var stack = chainStack(prepareTransportStack(config).concat([{\n        incoming: function(message, origin){\n            config.onMessage(message, origin);\n        },\n        callback: function(success){\n            if (config.onReady) {\n                config.onReady(success);\n            }\n        }\n    }])), recipient = getLocation(config.remote);\n    \n    // set the origin\n    this.origin = getLocation(config.remote);\n\t\n    /**\n     * Initiates the destruction of the stack.\n     */\n    this.destroy = function(){\n        stack.destroy();\n    };\n    \n    /**\n     * Posts a message to the remote end of the channel\n     * @param {String} message The message to send\n     */\n    this.postMessage = function(message){\n        stack.outgoing(message, recipient);\n    };\n    \n    stack.init();\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, undef,, chainStack, prepareTransportStack, debug, getLocation */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/** \n * @class easyXDM.Rpc\n * Creates a proxy object that can be used to call methods implemented on the remote end of the channel, and also to provide the implementation\n * of methods to be called from the remote end.<br/>\n * The instantiated object will have methods matching those specified in <code>config.remote</code>.<br/>\n * This requires the JSON object present in the document, either natively, using json.org's json2 or as a wrapper around library spesific methods.\n * <h2>How to set up</h2>\n * <pre><code>\n * var rpc = new easyXDM.Rpc({\n * &nbsp; &#47;&#47; this configuration is equal to that used by the Socket.\n * &nbsp; remote: \"http:&#47;&#47;remotedomain/...\",\n * &nbsp; onReady: function(){\n * &nbsp; &nbsp; &#47;&#47; you need to wait for the onReady callback before using the proxy\n * &nbsp; &nbsp; rpc.foo(...\n * &nbsp; }\n * },{\n * &nbsp; local: {..},\n * &nbsp; remote: {..}\n * });\n * </code></pre>\n * \n * <h2>Exposing functions (procedures)</h2>\n * <pre><code>\n * var rpc = new easyXDM.Rpc({\n * &nbsp; ...\n * },{\n * &nbsp; local: {\n * &nbsp; &nbsp; nameOfMethod: {\n * &nbsp; &nbsp; &nbsp; method: function(arg1, arg2, success, error){\n * &nbsp; &nbsp; &nbsp; &nbsp; ...\n * &nbsp; &nbsp; &nbsp; }\n * &nbsp; &nbsp; },\n * &nbsp; &nbsp; &#47;&#47; with shorthand notation \n * &nbsp; &nbsp; nameOfAnotherMethod:  function(arg1, arg2, success, error){\n * &nbsp; &nbsp; }\n * &nbsp; },\n * &nbsp; remote: {...}\n * });\n * </code></pre>\n\n * The function referenced by  [method] will receive the passed arguments followed by the callback functions <code>success</code> and <code>error</code>.<br/>\n * To send a successfull result back you can use\n *     <pre><code>\n *     return foo;\n *     </pre></code>\n * or\n *     <pre><code>\n *     success(foo);\n *     </pre></code>\n *  To return an error you can use\n *     <pre><code>\n *     throw new Error(\"foo error\");\n *     </code></pre>\n * or\n *     <pre><code>\n *     error(\"foo error\");\n *     </code></pre>\n *\n * <h2>Defining remotely exposed methods (procedures/notifications)</h2>\n * The definition of the remote end is quite similar:\n * <pre><code>\n * var rpc = new easyXDM.Rpc({\n * &nbsp; ...\n * },{\n * &nbsp; local: {...},\n * &nbsp; remote: {\n * &nbsp; &nbsp; nameOfMethod: {}\n * &nbsp; }\n * });\n * </code></pre>\n * To call a remote method use\n * <pre><code>\n * rpc.nameOfMethod(\"arg1\", \"arg2\", function(value) {\n * &nbsp; alert(\"success: \" + value);\n * }, function(message) {\n * &nbsp; alert(\"error: \" + message + );\n * });\n * </code></pre>\n * Both the <code>success</code> and <code>errror</code> callbacks are optional.<br/>\n * When called with no callback a JSON-RPC 2.0 notification will be executed.\n * Be aware that you will not be notified of any errors with this method.\n * <br/>\n * <h2>Specifying a custom serializer</h2>\n * If you do not want to use the JSON2 library for non-native JSON support, but instead capabilities provided by some other library\n * then you can specify a custom serializer using <code>serializer: foo</code>\n * <pre><code>\n * var rpc = new easyXDM.Rpc({\n * &nbsp; ...\n * },{\n * &nbsp; local: {...},\n * &nbsp; remote: {...},\n * &nbsp; serializer : {\n * &nbsp; &nbsp; parse: function(string){ ... },\n * &nbsp; &nbsp; stringify: function(object) {...}\n * &nbsp; }\n * });\n * </code></pre>\n * If <code>serializer</code> is set then the class will not attempt to use the native implementation.\n * @namespace easyXDM\n * @constructor\n * @param {Object} config The underlying transports configuration. See easyXDM.Socket for available parameters.\n * @param {Object} jsonRpcConfig The description of the interface to implement.\n */\neasyXDM.Rpc = function(config, jsonRpcConfig){\n    var trace = debug.getTracer(\"easyXDM.Rpc\");\n    trace(\"constructor\");\n    \n    // expand shorthand notation\n    if (jsonRpcConfig.local) {\n        for (var method in jsonRpcConfig.local) {\n            if (jsonRpcConfig.local.hasOwnProperty(method)) {\n                var member = jsonRpcConfig.local[method];\n                if (typeof member === \"function\") {\n                    jsonRpcConfig.local[method] = {\n                        method: member\n                    };\n                }\n            }\n        }\n    }\n\t\n    // create the stack\n    var stack = chainStack(prepareTransportStack(config).concat([new easyXDM.stack.RpcBehavior(this, jsonRpcConfig), {\n        callback: function(success){\n            if (config.onReady) {\n                config.onReady(success);\n            }\n        }\n    }]));\n\t\n    // set the origin \n    this.origin = getLocation(config.remote);\n\t\n    \n    /**\n     * Initiates the destruction of the stack.\n     */\n    this.destroy = function(){\n        stack.destroy();\n    };\n    \n    stack.init();\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, getLocation, appendQueryParameters, createFrame, debug, un, on, apply, whenReady, getParentObject, IFRAME_PREFIX*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.SameOriginTransport\n * SameOriginTransport is a transport class that can be used when both domains have the same origin.<br/>\n * This can be useful for testing and for when the main application supports both internal and external sources.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String} remote The remote document to communicate with.\n */\neasyXDM.stack.SameOriginTransport = function(config){\n    var trace = debug.getTracer(\"easyXDM.stack.SameOriginTransport\");\n    trace(\"constructor\");\n    var pub, frame, send, targetOrigin;\n    \n    return (pub = {\n        outgoing: function(message, domain, fn){\n            send(message);\n            if (fn) {\n                fn();\n            }\n        },\n        destroy: function(){\n            trace(\"destroy\");\n            if (frame) {\n                frame.parentNode.removeChild(frame);\n                frame = null;\n            }\n        },\n        onDOMReady: function(){\n            trace(\"init\");\n            targetOrigin = getLocation(config.remote);\n            \n            if (config.isHost) {\n                // set up the iframe\n                apply(config.props, {\n                    src: appendQueryParameters(config.remote, {\n                        xdm_e: location.protocol + \"//\" + location.host + location.pathname,\n                        xdm_c: config.channel,\n                        xdm_p: 4 // 4 = SameOriginTransport\n                    }),\n                    name: IFRAME_PREFIX + config.channel + \"_provider\"\n                });\n                frame = createFrame(config);\n                easyXDM.Fn.set(config.channel, function(sendFn){\n                    send = sendFn;\n                    setTimeout(function(){\n                        pub.up.callback(true);\n                    }, 0);\n                    return function(msg){\n                        pub.up.incoming(msg, targetOrigin);\n                    };\n                });\n            }\n            else {\n                send = getParentObject().Fn.get(config.channel, true)(function(msg){\n                    pub.up.incoming(msg, targetOrigin);\n                });\n                setTimeout(function(){\n                    pub.up.callback(true);\n                }, 0);\n            }\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global global, easyXDM, window, getLocation, appendQueryParameters, createFrame, debug, apply, whenReady, IFRAME_PREFIX, namespace, resolveUrl, getDomainName, HAS_FLASH_THROTTLED_BUG, getPort, query*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.FlashTransport\n * FlashTransport is a transport class that uses an SWF with LocalConnection to pass messages back and forth.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String} remote The remote domain to communicate with.\n * @cfg {String} secret the pre-shared secret used to secure the communication.\n * @cfg {String} swf The path to the swf file\n * @cfg {Boolean} swfNoThrottle Set this to true if you want to take steps to avoid beeing throttled when hidden.\n * @cfg {String || DOMElement} swfContainer Set this if you want to control where the swf is placed\n */\neasyXDM.stack.FlashTransport = function(config){\n    var trace = debug.getTracer(\"easyXDM.stack.FlashTransport\");\n    trace(\"constructor\");\n    if (!config.swf) {\n        throw new Error(\"Path to easyxdm.swf is missing\");\n    }\n    var pub, // the public interface\n frame, send, targetOrigin, swf, swfContainer;\n    \n    function onMessage(message, origin){\n        setTimeout(function(){\n            trace(\"received message\");\n            pub.up.incoming(message, targetOrigin);\n        }, 0);\n    }\n    \n    /**\n     * This method adds the SWF to the DOM and prepares the initialization of the channel\n     */\n    function addSwf(domain){\n        trace(\"creating factory with SWF from \" + domain);\n        // the differentiating query argument is needed in Flash9 to avoid a caching issue where LocalConnection would throw an error.\n        var url = config.swf + \"?host=\" + config.isHost;\n        var id = \"easyXDM_swf_\" + Math.floor(Math.random() * 10000);\n        \n        // prepare the init function that will fire once the swf is ready\n        easyXDM.Fn.set(\"flash_loaded\" + domain.replace(/[\\-.]/g, \"_\"), function(){\n            easyXDM.stack.FlashTransport[domain].swf = swf = swfContainer.firstChild;\n            var queue = easyXDM.stack.FlashTransport[domain].queue;\n            for (var i = 0; i < queue.length; i++) {\n                queue[i]();\n            }\n            queue.length = 0;\n        });\n        \n        if (config.swfContainer) {\n            swfContainer = (typeof config.swfContainer == \"string\") ? document.getElementById(config.swfContainer) : config.swfContainer;\n        }\n        else {\n            // create the container that will hold the swf\n            swfContainer = document.createElement('div');\n            \n            // http://bugs.adobe.com/jira/browse/FP-4796\n            // http://tech.groups.yahoo.com/group/flexcoders/message/162365\n            // https://groups.google.com/forum/#!topic/easyxdm/mJZJhWagoLc\n            apply(swfContainer.style, HAS_FLASH_THROTTLED_BUG && config.swfNoThrottle ? {\n                height: \"20px\",\n                width: \"20px\",\n                position: \"fixed\",\n                right: 0,\n                top: 0\n            } : {\n                height: \"1px\",\n                width: \"1px\",\n                position: \"absolute\",\n                overflow: \"hidden\",\n                right: 0,\n                top: 0\n            });\n            document.body.appendChild(swfContainer);\n        }\n        \n        // create the object/embed\n        var flashVars = \"callback=flash_loaded\" + encodeURIComponent(domain.replace(/[\\-.]/g, \"_\"))\n            + \"&proto=\" + global.location.protocol\n            + \"&domain=\" + encodeURIComponent(getDomainName(global.location.href))\n            + \"&port=\" + encodeURIComponent(getPort(global.location.href))\n            + \"&ns=\" + encodeURIComponent(namespace);\n        flashVars += \"&log=true\";\n        swfContainer.innerHTML = \"<object height='20' width='20' type='application/x-shockwave-flash' id='\" + id + \"' data='\" + url + \"'>\" +\n        \"<param name='allowScriptAccess' value='always'></param>\" +\n        \"<param name='wmode' value='transparent'>\" +\n        \"<param name='movie' value='\" +\n        url +\n        \"'></param>\" +\n        \"<param name='flashvars' value='\" +\n        flashVars +\n        \"'></param>\" +\n        \"<embed type='application/x-shockwave-flash' FlashVars='\" +\n        flashVars +\n        \"' allowScriptAccess='always' wmode='transparent' src='\" +\n        url +\n        \"' height='1' width='1'></embed>\" +\n        \"</object>\";\n    }\n    \n    return (pub = {\n        outgoing: function(message, domain, fn){\n            swf.postMessage(config.channel, message.toString());\n            if (fn) {\n                fn();\n            }\n        },\n        destroy: function(){\n            trace(\"destroy\");\n            try {\n                swf.destroyChannel(config.channel);\n            } \n            catch (e) {\n            }\n            swf = null;\n            if (frame) {\n                frame.parentNode.removeChild(frame);\n                frame = null;\n            }\n        },\n        onDOMReady: function(){\n            trace(\"init\");\n            \n            targetOrigin = config.remote;\n            \n            // Prepare the code that will be run after the swf has been intialized\n            easyXDM.Fn.set(\"flash_\" + config.channel + \"_init\", function(){\n                setTimeout(function(){\n                    trace(\"firing onReady\");\n                    pub.up.callback(true);\n                });\n            });\n            \n            // set up the omMessage handler\n            easyXDM.Fn.set(\"flash_\" + config.channel + \"_onMessage\", onMessage);\n            \n            config.swf = resolveUrl(config.swf); // reports have been made of requests gone rogue when using relative paths\n            var swfdomain = getDomainName(config.swf);\n            var fn = function(){\n                // set init to true in case the fn was called was invoked from a separate instance\n                easyXDM.stack.FlashTransport[swfdomain].init = true;\n                swf = easyXDM.stack.FlashTransport[swfdomain].swf;\n                // create the channel\n                swf.createChannel(config.channel, config.secret, getLocation(config.remote), config.isHost);\n                \n                if (config.isHost) {\n                    // if Flash is going to be throttled and we want to avoid this\n                    if (HAS_FLASH_THROTTLED_BUG && config.swfNoThrottle) {\n                        apply(config.props, {\n                            position: \"fixed\",\n                            right: 0,\n                            top: 0,\n                            height: \"20px\",\n                            width: \"20px\"\n                        });\n                    }\n                    // set up the iframe\n                    apply(config.props, {\n                        src: appendQueryParameters(config.remote, {\n                            xdm_e: getLocation(location.href),\n                            xdm_c: config.channel,\n                            xdm_p: 6, // 6 = FlashTransport\n                            xdm_s: config.secret\n                        }),\n                        name: IFRAME_PREFIX + config.channel + \"_provider\"\n                    });\n                    frame = createFrame(config);\n                }\n            };\n            \n            if (easyXDM.stack.FlashTransport[swfdomain] && easyXDM.stack.FlashTransport[swfdomain].init) {\n                // if the swf is in place and we are the consumer\n                fn();\n            }\n            else {\n                // if the swf does not yet exist\n                if (!easyXDM.stack.FlashTransport[swfdomain]) {\n                    // add the queue to hold the init fn's\n                    easyXDM.stack.FlashTransport[swfdomain] = {\n                        queue: [fn]\n                    };\n                    addSwf(swfdomain);\n                }\n                else {\n                    easyXDM.stack.FlashTransport[swfdomain].queue.push(fn);\n                }\n            }\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, getLocation, appendQueryParameters, createFrame, debug, un, on, apply, whenReady, IFRAME_PREFIX*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.PostMessageTransport\n * PostMessageTransport is a transport class that uses HTML5 postMessage for communication.<br/>\n * <a href=\"http://msdn.microsoft.com/en-us/library/ms644944(VS.85).aspx\">http://msdn.microsoft.com/en-us/library/ms644944(VS.85).aspx</a><br/>\n * <a href=\"https://developer.mozilla.org/en/DOM/window.postMessage\">https://developer.mozilla.org/en/DOM/window.postMessage</a>\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String} remote The remote domain to communicate with.\n */\neasyXDM.stack.PostMessageTransport = function(config){\n    var trace = debug.getTracer(\"easyXDM.stack.PostMessageTransport\");\n    trace(\"constructor\");\n    var pub, // the public interface\n frame, // the remote frame, if any\n callerWindow, // the window that we will call with\n targetOrigin; // the domain to communicate with\n    /**\n     * Resolves the origin from the event object\n     * @private\n     * @param {Object} event The messageevent\n     * @return {String} The scheme, host and port of the origin\n     */\n    function _getOrigin(event){\n        if (event.origin) {\n            // This is the HTML5 property\n            return getLocation(event.origin);\n        }\n        if (event.uri) {\n            // From earlier implementations \n            return getLocation(event.uri);\n        }\n        if (event.domain) {\n            // This is the last option and will fail if the \n            // origin is not using the same schema as we are\n            return location.protocol + \"//\" + event.domain;\n        }\n        throw \"Unable to retrieve the origin of the event\";\n    }\n    \n    /**\n     * This is the main implementation for the onMessage event.<br/>\n     * It checks the validity of the origin and passes the message on if appropriate.\n     * @private\n     * @param {Object} event The messageevent\n     */\n    function _window_onMessage(event){\n        if (typeof event.data !== \"string\") {\n            // postMessage also supports passing objects, but easyXDM's messages are always strings\n            return;\n        }\n        var origin = _getOrigin(event);\n        trace(\"received message '\" + event.data + \"' from \" + origin);\n        if (origin == targetOrigin && event.data.substring(0, config.channel.length + 1) == config.channel + \" \") {\n            pub.up.incoming(event.data.substring(config.channel.length + 1), origin);\n        }\n    }\n\n    \n    /**\n     * This adds the listener for messages when the frame is ready.\n     * @private\n     * @param {Object} event The messageevent\n     */\n    // add the event handler for listening\n    function _window_waitForReady(event){  \n        if (event.data == config.channel + \"-ready\") {\n            trace(\"firing onReady\");\n            // replace the eventlistener\n            callerWindow = (\"postMessage\" in frame.contentWindow) ? frame.contentWindow : frame.contentWindow.document;\n            un(window, \"message\", _window_waitForReady);\n            on(window, \"message\", _window_onMessage);\n            setTimeout(function(){\n                pub.up.callback(true);\n            }, 0);\n        }\n    }\n    \n    return (pub = {\n        outgoing: function(message, domain, fn){\n            callerWindow.postMessage(config.channel + \" \" + message, domain || targetOrigin);\n            if (fn) {\n                fn();\n            }\n        },\n        destroy: function(){\n            trace(\"destroy\");\n            un(window, \"message\", _window_waitForReady);\n            un(window, \"message\", _window_onMessage);\n            if (frame) {\n                callerWindow = null;\n                frame.parentNode.removeChild(frame);\n                frame = null;\n            }\n        },\n        onDOMReady: function(){\n            trace(\"init\");\n            targetOrigin = getLocation(config.remote);\n            if (config.isHost) {\n                on(window, \"message\", _window_waitForReady);\n                \n                // set up the iframe\n                apply(config.props, {\n                    src: appendQueryParameters(config.remote, {\n                        xdm_e: getLocation(location.href),\n                        xdm_c: config.channel,\n                        xdm_p: 1 // 1 = PostMessage\n                    }),\n                    name: IFRAME_PREFIX + config.channel + \"_provider\"\n                });\n                frame = createFrame(config);\n            }\n            else {\n                // add the event handler for listening\n                on(window, \"message\", _window_onMessage);\n                callerWindow = (\"postMessage\" in window.parent) ? window.parent : window.parent.document;\n                callerWindow.postMessage(config.channel + \"-ready\", targetOrigin);\n                \n                setTimeout(function(){\n                    pub.up.callback(true);\n                }, 0);\n            }\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, getLocation, appendQueryParameters, createFrame, debug, apply, query, whenReady, IFRAME_PREFIX*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.FrameElementTransport\n * FrameElementTransport is a transport class that can be used with Gecko-browser as these allow passing variables using the frameElement property.<br/>\n * Security is maintained as Gecho uses Lexical Authorization to determine under which scope a function is running.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String} remote The remote document to communicate with.\n */\neasyXDM.stack.FrameElementTransport = function(config){\n    var trace = debug.getTracer(\"easyXDM.stack.FrameElementTransport\");\n    trace(\"constructor\");\n    var pub, frame, send, targetOrigin;\n    \n    return (pub = {\n        outgoing: function(message, domain, fn){\n            send.call(this, message);\n            if (fn) {\n                fn();\n            }\n        },\n        destroy: function(){\n            trace(\"destroy\");\n            if (frame) {\n                frame.parentNode.removeChild(frame);\n                frame = null;\n            }\n        },\n        onDOMReady: function(){\n            trace(\"init\");\n            targetOrigin = getLocation(config.remote);\n            \n            if (config.isHost) {\n                // set up the iframe\n                apply(config.props, {\n                    src: appendQueryParameters(config.remote, {\n                        xdm_e: getLocation(location.href),\n                        xdm_c: config.channel,\n                        xdm_p: 5 // 5 = FrameElementTransport\n                    }),\n                    name: IFRAME_PREFIX + config.channel + \"_provider\"\n                });\n                frame = createFrame(config);\n                frame.fn = function(sendFn){\n                    delete frame.fn;\n                    send = sendFn;\n                    setTimeout(function(){\n                        pub.up.callback(true);\n                    }, 0);\n                    // remove the function so that it cannot be used to overwrite the send function later on\n                    return function(msg){\n                        pub.up.incoming(msg, targetOrigin);\n                    };\n                };\n            }\n            else {\n                // This is to mitigate origin-spoofing\n                if (document.referrer && getLocation(document.referrer) != query.xdm_e) {\n                    window.top.location = query.xdm_e;\n                }\n                send = window.frameElement.fn(function(msg){\n                    pub.up.incoming(msg, targetOrigin);\n                });\n                pub.up.callback(true);\n            }\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, undef, getLocation, appendQueryParameters, resolveUrl, createFrame, debug, un, apply, whenReady, IFRAME_PREFIX*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.NameTransport\n * NameTransport uses the window.name property to relay data.\n * The <code>local</code> parameter needs to be set on both the consumer and provider,<br/>\n * and the <code>remoteHelper</code> parameter needs to be set on the consumer.\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String} remoteHelper The url to the remote instance of hash.html - this is only needed for the host.\n * @namespace easyXDM.stack\n */\neasyXDM.stack.NameTransport = function(config){\n    var trace = debug.getTracer(\"easyXDM.stack.NameTransport\");\n    trace(\"constructor\");\n    if (config.isHost && undef(config.remoteHelper)) {\n        trace(\"missing remoteHelper\");\n        throw new Error(\"missing remoteHelper\");\n    }\n    \n    var pub; // the public interface\n    var isHost, callerWindow, remoteWindow, readyCount, callback, remoteOrigin, remoteUrl;\n    \n    function _sendMessage(message){\n        var url = config.remoteHelper + (isHost ? \"#_3\" : \"#_2\") + config.channel;\n        trace(\"sending message \" + message);\n        trace(\"navigating to  '\" + url + \"'\");\n        callerWindow.contentWindow.sendMessage(message, url);\n    }\n    \n    function _onReady(){\n        if (isHost) {\n            if (++readyCount === 2 || !isHost) {\n                pub.up.callback(true);\n            }\n        }\n        else {\n            _sendMessage(\"ready\");\n            trace(\"calling onReady\");\n            pub.up.callback(true);\n        }\n    }\n    \n    function _onMessage(message){\n        trace(\"received message \" + message);\n        pub.up.incoming(message, remoteOrigin);\n    }\n    \n    function _onLoad(){\n        if (callback) {\n            setTimeout(function(){\n                callback(true);\n            }, 0);\n        }\n    }\n    \n    return (pub = {\n        outgoing: function(message, domain, fn){\n            callback = fn;\n            _sendMessage(message);\n        },\n        destroy: function(){\n            trace(\"destroy\");\n            callerWindow.parentNode.removeChild(callerWindow);\n            callerWindow = null;\n            if (isHost) {\n                remoteWindow.parentNode.removeChild(remoteWindow);\n                remoteWindow = null;\n            }\n        },\n        onDOMReady: function(){\n            trace(\"init\");\n            isHost = config.isHost;\n            readyCount = 0;\n            remoteOrigin = getLocation(config.remote);\n            config.local = resolveUrl(config.local);\n            \n            if (isHost) {\n                // Register the callback\n                easyXDM.Fn.set(config.channel, function(message){\n                    trace(\"received initial message \" + message);\n                    if (isHost && message === \"ready\") {\n                        // Replace the handler\n                        easyXDM.Fn.set(config.channel, _onMessage);\n                        _onReady();\n                    }\n                });\n                \n                // Set up the frame that points to the remote instance\n                remoteUrl = appendQueryParameters(config.remote, {\n                    xdm_e: config.local,\n                    xdm_c: config.channel,\n                    xdm_p: 2\n                });\n                apply(config.props, {\n                    src: remoteUrl + '#' + config.channel,\n                    name: IFRAME_PREFIX + config.channel + \"_provider\"\n                });\n                remoteWindow = createFrame(config);\n            }\n            else {\n                config.remoteHelper = config.remote;\n                easyXDM.Fn.set(config.channel, _onMessage);\n            }\n            \n            // Set up the iframe that will be used for the transport\n            var onLoad = function(){\n                // Remove the handler\n                var w = callerWindow || this;\n                un(w, \"load\", onLoad);\n                easyXDM.Fn.set(config.channel + \"_load\", _onLoad);\n                (function test(){\n                    if (typeof w.contentWindow.sendMessage == \"function\") {\n                        _onReady();\n                    }\n                    else {\n                        setTimeout(test, 50);\n                    }\n                }());\n            };\n            \n            callerWindow = createFrame({\n                props: {\n                    src: config.local + \"#_4\" + config.channel\n                },\n                onLoad: onLoad\n            });\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, getLocation, createFrame, debug, un, on, apply, whenReady, IFRAME_PREFIX*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.HashTransport\n * HashTransport is a transport class that uses the IFrame URL Technique for communication.<br/>\n * <a href=\"http://msdn.microsoft.com/en-us/library/bb735305.aspx\">http://msdn.microsoft.com/en-us/library/bb735305.aspx</a><br/>\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The transports configuration.\n * @cfg {String/Window} local The url to the local file used for proxying messages, or the local window.\n * @cfg {Number} delay The number of milliseconds easyXDM should try to get a reference to the local window.\n * @cfg {Number} interval The interval used when polling for messages.\n */\neasyXDM.stack.HashTransport = function(config){\n    var trace = debug.getTracer(\"easyXDM.stack.HashTransport\");\n    trace(\"constructor\");\n    var pub;\n    var me = this, isHost, _timer, pollInterval, _lastMsg, _msgNr, _listenerWindow, _callerWindow;\n    var useParent, _remoteOrigin;\n    \n    function _sendMessage(message){\n        trace(\"sending message '\" + (_msgNr + 1) + \" \" + message + \"' to \" + _remoteOrigin);\n        if (!_callerWindow) {\n            trace(\"no caller window\");\n            return;\n        }\n        var url = config.remote + \"#\" + (_msgNr++) + \"_\" + message;\n        ((isHost || !useParent) ? _callerWindow.contentWindow : _callerWindow).location = url;\n    }\n    \n    function _handleHash(hash){\n        _lastMsg = hash;\n        trace(\"received message '\" + _lastMsg + \"' from \" + _remoteOrigin);\n        pub.up.incoming(_lastMsg.substring(_lastMsg.indexOf(\"_\") + 1), _remoteOrigin);\n    }\n    \n    /**\n     * Checks location.hash for a new message and relays this to the receiver.\n     * @private\n     */\n    function _pollHash(){\n        if (!_listenerWindow) {\n            return;\n        }\n        var href = _listenerWindow.location.href, hash = \"\", indexOf = href.indexOf(\"#\");\n        if (indexOf != -1) {\n            hash = href.substring(indexOf);\n        }\n        if (hash && hash != _lastMsg) {\n            trace(\"poll: new message\");\n            _handleHash(hash);\n        }\n    }\n    \n    function _attachListeners(){\n        trace(\"starting polling\");\n        _timer = setInterval(_pollHash, pollInterval);\n    }\n    \n    return (pub = {\n        outgoing: function(message, domain){\n            _sendMessage(message);\n        },\n        destroy: function(){\n            window.clearInterval(_timer);\n            if (isHost || !useParent) {\n                _callerWindow.parentNode.removeChild(_callerWindow);\n            }\n            _callerWindow = null;\n        },\n        onDOMReady: function(){\n            isHost = config.isHost;\n            pollInterval = config.interval;\n            _lastMsg = \"#\" + config.channel;\n            _msgNr = 0;\n            useParent = config.useParent;\n            _remoteOrigin = getLocation(config.remote);\n            if (isHost) {\n                apply(config.props, {\n                    src: config.remote,\n                    name: IFRAME_PREFIX + config.channel + \"_provider\"\n                });\n                if (useParent) {\n                    config.onLoad = function(){\n                        _listenerWindow = window;\n                        _attachListeners();\n                        pub.up.callback(true);\n                    };\n                }\n                else {\n                    var tries = 0, max = config.delay / 50;\n                    (function getRef(){\n                        if (++tries > max) {\n                            trace(\"unable to get reference to _listenerWindow, giving up\");\n                            throw new Error(\"Unable to reference listenerwindow\");\n                        }\n                        try {\n                            _listenerWindow = _callerWindow.contentWindow.frames[IFRAME_PREFIX + config.channel + \"_consumer\"];\n                        } \n                        catch (ex) {\n                        }\n                        if (_listenerWindow) {\n                            _attachListeners();\n                            trace(\"got a reference to _listenerWindow\");\n                            pub.up.callback(true);\n                        }\n                        else {\n                            setTimeout(getRef, 50);\n                        }\n                    }());\n                }\n                _callerWindow = createFrame(config);\n            }\n            else {\n                _listenerWindow = window;\n                _attachListeners();\n                if (useParent) {\n                    _callerWindow = parent;\n                    pub.up.callback(true);\n                }\n                else {\n                    apply(config, {\n                        props: {\n                            src: config.remote + \"#\" + config.channel + new Date(),\n                            name: IFRAME_PREFIX + config.channel + \"_consumer\"\n                        },\n                        onLoad: function(){\n                            pub.up.callback(true);\n                        }\n                    });\n                    _callerWindow = createFrame(config);\n                }\n            }\n        },\n        init: function(){\n            whenReady(pub.onDOMReady, pub);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, debug */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.ReliableBehavior\n * This is a behavior that tries to make the underlying transport reliable by using acknowledgements.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The behaviors configuration.\n */\neasyXDM.stack.ReliableBehavior = function(config){\n    var trace = debug.getTracer(\"easyXDM.stack.ReliableBehavior\");\n    trace(\"constructor\");\n    var pub, // the public interface\n callback; // the callback to execute when we have a confirmed success/failure\n    var idOut = 0, idIn = 0, currentMessage = \"\";\n    \n    return (pub = {\n        incoming: function(message, origin){\n            trace(\"incoming: \" + message);\n            var indexOf = message.indexOf(\"_\"), ack = message.substring(0, indexOf).split(\",\");\n            message = message.substring(indexOf + 1);\n            \n            if (ack[0] == idOut) {\n                trace(\"message delivered\");\n                currentMessage = \"\";\n                if (callback) {\n                    callback(true);\n                }\n            }\n            if (message.length > 0) {\n                trace(\"sending ack, and passing on \" + message);\n                pub.down.outgoing(ack[1] + \",\" + idOut + \"_\" + currentMessage, origin);\n                if (idIn != ack[1]) {\n                    idIn = ack[1];\n                    pub.up.incoming(message, origin);\n                }\n            }\n            \n        },\n        outgoing: function(message, origin, fn){\n            currentMessage = message;\n            callback = fn;\n            pub.down.outgoing(idIn + \",\" + (++idOut) + \"_\" + message, origin);\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, debug, undef, removeFromStack*/\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.QueueBehavior\n * This is a behavior that enables queueing of messages. <br/>\n * It will buffer incoming messages and dispach these as fast as the underlying transport allows.\n * This will also fragment/defragment messages so that the outgoing message is never bigger than the\n * set length.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The behaviors configuration. Optional.\n * @cfg {Number} maxLength The maximum length of each outgoing message. Set this to enable fragmentation.\n */\neasyXDM.stack.QueueBehavior = function(config){\n    var trace = debug.getTracer(\"easyXDM.stack.QueueBehavior\");\n    trace(\"constructor\");\n    var pub, queue = [], waiting = true, incoming = \"\", destroying, maxLength = 0, lazy = false, doFragment = false;\n    \n    function dispatch(){\n        if (config.remove && queue.length === 0) {\n            trace(\"removing myself from the stack\");\n            removeFromStack(pub);\n            return;\n        }\n        if (waiting || queue.length === 0 || destroying) {\n            return;\n        }\n        trace(\"dispatching from queue\");\n        waiting = true;\n        var message = queue.shift();\n        \n        pub.down.outgoing(message.data, message.origin, function(success){\n            waiting = false;\n            if (message.callback) {\n                setTimeout(function(){\n                    message.callback(success);\n                }, 0);\n            }\n            dispatch();\n        });\n    }\n    return (pub = {\n        init: function(){\n            if (undef(config)) {\n                config = {};\n            }\n            if (config.maxLength) {\n                maxLength = config.maxLength;\n                doFragment = true;\n            }\n            if (config.lazy) {\n                lazy = true;\n            }\n            else {\n                pub.down.init();\n            }\n        },\n        callback: function(success){\n            waiting = false;\n            var up = pub.up; // in case dispatch calls removeFromStack\n            dispatch();\n            up.callback(success);\n        },\n        incoming: function(message, origin){\n            if (doFragment) {\n                var indexOf = message.indexOf(\"_\"), seq = parseInt(message.substring(0, indexOf), 10);\n                incoming += message.substring(indexOf + 1);\n                if (seq === 0) {\n                    trace(\"received the last fragment\");\n                    if (config.encode) {\n                        incoming = decodeURIComponent(incoming);\n                    }\n                    pub.up.incoming(incoming, origin);\n                    incoming = \"\";\n                }\n                else {\n                    trace(\"waiting for more fragments, seq=\" + message);\n                }\n            }\n            else {\n                pub.up.incoming(message, origin);\n            }\n        },\n        outgoing: function(message, origin, fn){\n            if (config.encode) {\n                message = encodeURIComponent(message);\n            }\n            var fragments = [], fragment;\n            if (doFragment) {\n                // fragment into chunks\n                while (message.length !== 0) {\n                    fragment = message.substring(0, maxLength);\n                    message = message.substring(fragment.length);\n                    fragments.push(fragment);\n                }\n                // enqueue the chunks\n                while ((fragment = fragments.shift())) {\n                    trace(\"enqueuing\");\n                    queue.push({\n                        data: fragments.length + \"_\" + fragment,\n                        origin: origin,\n                        callback: fragments.length === 0 ? fn : null\n                    });\n                }\n            }\n            else {\n                queue.push({\n                    data: message,\n                    origin: origin,\n                    callback: fn\n                });\n            }\n            if (lazy) {\n                pub.down.init();\n            }\n            else {\n                dispatch();\n            }\n        },\n        destroy: function(){\n            trace(\"destroy\");\n            destroying = true;\n            pub.down.destroy();\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, undef, debug */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.VerifyBehavior\n * This behavior will verify that communication with the remote end is possible, and will also sign all outgoing,\n * and verify all incoming messages. This removes the risk of someone hijacking the iframe to send malicious messages.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} config The behaviors configuration.\n * @cfg {Boolean} initiate If the verification should be initiated from this end.\n */\neasyXDM.stack.VerifyBehavior = function(config){\n    var trace = debug.getTracer(\"easyXDM.stack.VerifyBehavior\");\n    trace(\"constructor\");\n    if (undef(config.initiate)) {\n        throw new Error(\"settings.initiate is not set\");\n    }\n    var pub, mySecret, theirSecret, verified = false;\n    \n    function startVerification(){\n        trace(\"requesting verification\");\n        mySecret = Math.random().toString(16).substring(2);\n        pub.down.outgoing(mySecret);\n    }\n    \n    return (pub = {\n        incoming: function(message, origin){\n            var indexOf = message.indexOf(\"_\");\n            if (indexOf === -1) {\n                if (message === mySecret) {\n                    trace(\"verified, calling callback\");\n                    pub.up.callback(true);\n                }\n                else if (!theirSecret) {\n                    trace(\"returning secret\");\n                    theirSecret = message;\n                    if (!config.initiate) {\n                        startVerification();\n                    }\n                    pub.down.outgoing(message);\n                }\n            }\n            else {\n                if (message.substring(0, indexOf) === theirSecret) {\n                    pub.up.incoming(message.substring(indexOf + 1), origin);\n                }\n            }\n        },\n        outgoing: function(message, origin, fn){\n            pub.down.outgoing(mySecret + \"_\" + message, origin, fn);\n        },\n        callback: function(success){\n            if (config.initiate) {\n                startVerification();\n            }\n        }\n    });\n};\n/*jslint evil: true, browser: true, immed: true, passfail: true, undef: true, newcap: true*/\n/*global easyXDM, window, escape, unescape, undef, getJSON, debug, emptyFn, isArray */\n//\n// easyXDM\n// http://easyxdm.net/\n// Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n/**\n * @class easyXDM.stack.RpcBehavior\n * This uses JSON-RPC 2.0 to expose local methods and to invoke remote methods and have responses returned over the the string based transport stack.<br/>\n * Exposed methods can return values synchronous, asyncronous, or bet set up to not return anything.\n * @namespace easyXDM.stack\n * @constructor\n * @param {Object} proxy The object to apply the methods to.\n * @param {Object} config The definition of the local and remote interface to implement.\n * @cfg {Object} local The local interface to expose.\n * @cfg {Object} remote The remote methods to expose through the proxy.\n * @cfg {Object} serializer The serializer to use for serializing and deserializing the JSON. Should be compatible with the HTML5 JSON object. Optional, will default to JSON.\n */\neasyXDM.stack.RpcBehavior = function(proxy, config){\n    var trace = debug.getTracer(\"easyXDM.stack.RpcBehavior\");\n    var pub, serializer = config.serializer || getJSON();\n    var _callbackCounter = 0, _callbacks = {};\n    \n    /**\n     * Serializes and sends the message\n     * @private\n     * @param {Object} data The JSON-RPC message to be sent. The jsonrpc property will be added.\n     */\n    function _send(data){\n        data.jsonrpc = \"2.0\";\n        pub.down.outgoing(serializer.stringify(data));\n    }\n    \n    /**\n     * Creates a method that implements the given definition\n     * @private\n     * @param {Object} The method configuration\n     * @param {String} method The name of the method\n     * @return {Function} A stub capable of proxying the requested method call\n     */\n    function _createMethod(definition, method){\n        var slice = Array.prototype.slice;\n        \n        trace(\"creating method \" + method);\n        return function(){\n            trace(\"executing method \" + method);\n            var l = arguments.length, callback, message = {\n                method: method\n            };\n            \n            if (l > 0 && typeof arguments[l - 1] === \"function\") {\n                //with callback, procedure\n                if (l > 1 && typeof arguments[l - 2] === \"function\") {\n                    // two callbacks, success and error\n                    callback = {\n                        success: arguments[l - 2],\n                        error: arguments[l - 1]\n                    };\n                    message.params = slice.call(arguments, 0, l - 2);\n                }\n                else {\n                    // single callback, success\n                    callback = {\n                        success: arguments[l - 1]\n                    };\n                    message.params = slice.call(arguments, 0, l - 1);\n                }\n                _callbacks[\"\" + (++_callbackCounter)] = callback;\n                message.id = _callbackCounter;\n            }\n            else {\n                // no callbacks, a notification\n                message.params = slice.call(arguments, 0);\n            }\n            if (definition.namedParams && message.params.length === 1) {\n                message.params = message.params[0];\n            }\n            // Send the method request\n            _send(message);\n        };\n    }\n    \n    /**\n     * Executes the exposed method\n     * @private\n     * @param {String} method The name of the method\n     * @param {Number} id The callback id to use\n     * @param {Function} method The exposed implementation\n     * @param {Array} params The parameters supplied by the remote end\n     */\n    function _executeMethod(method, id, fn, params){\n        if (!fn) {\n            trace(\"requested to execute non-existent procedure \" + method);\n            if (id) {\n                _send({\n                    id: id,\n                    error: {\n                        code: -32601,\n                        message: \"Procedure not found.\"\n                    }\n                });\n            }\n            return;\n        }\n        \n        trace(\"requested to execute procedure \" + method);\n        var success, error;\n        if (id) {\n            success = function(result){\n                success = emptyFn;\n                _send({\n                    id: id,\n                    result: result\n                });\n            };\n            error = function(message, data){\n                error = emptyFn;\n                var msg = {\n                    id: id,\n                    error: {\n                        code: -32099,\n                        message: message\n                    }\n                };\n                if (data) {\n                    msg.error.data = data;\n                }\n                _send(msg);\n            };\n        }\n        else {\n            success = error = emptyFn;\n        }\n        // Call local method\n        if (!isArray(params)) {\n            params = [params];\n        }\n        try {\n            var result = fn.method.apply(fn.scope, params.concat([success, error]));\n            if (!undef(result)) {\n                success(result);\n            }\n        } \n        catch (ex1) {\n            error(ex1.message);\n        }\n    }\n    \n    return (pub = {\n        incoming: function(message, origin){\n            var data = serializer.parse(message);\n            if (data.method) {\n                trace(\"received request to execute method \" + data.method + (data.id ? (\" using callback id \" + data.id) : \"\"));\n                // A method call from the remote end\n                if (config.handle) {\n                    config.handle(data, _send);\n                }\n                else {\n                    _executeMethod(data.method, data.id, config.local[data.method], data.params);\n                }\n            }\n            else {\n                trace(\"received return value destined to callback with id \" + data.id);\n                // A method response from the other end\n                var callback = _callbacks[data.id];\n                if (data.error) {\n                    if (callback.error) {\n                        callback.error(data.error);\n                    }\n                    else {\n                        trace(\"unhandled error returned.\");\n                    }\n                }\n                else if (callback.success) {\n                    callback.success(data.result);\n                }\n                delete _callbacks[data.id];\n            }\n        },\n        init: function(){\n            trace(\"init\");\n            if (config.remote) {\n                trace(\"creating stubs\");\n                // Implement the remote sides exposed methods\n                for (var method in config.remote) {\n                    if (config.remote.hasOwnProperty(method)) {\n                        proxy[method] = _createMethod(config.remote[method], method);\n                    }\n                }\n            }\n            pub.down.init();\n        },\n        destroy: function(){\n            trace(\"destroy\");\n            for (var method in config.remote) {\n                if (config.remote.hasOwnProperty(method) && proxy.hasOwnProperty(method)) {\n                    delete proxy[method];\n                }\n            }\n            pub.down.destroy();\n        }\n    });\n};\nglobal.easyXDM = easyXDM;\n})(window, document, location, window.setTimeout, decodeURIComponent, encodeURIComponent);\n","/*!\n  * Reqwest! A general purpose XHR connection manager\n  * license MIT (c) Dustin Diaz 2015\n  * https://github.com/ded/reqwest\n  */\n!function(e,t,n){typeof module!=\"undefined\"&&module.exports?module.exports=n():typeof define==\"function\"&&define.amd?define(n):t[e]=n()}(\"reqwest\",this,function(){function succeed(e){var t=protocolRe.exec(e.url);return t=t&&t[1]||context.location.protocol,httpsRe.test(t)?twoHundo.test(e.request.status):!!e.request.response}function handleReadyState(e,t,n){return function(){if(e._aborted)return n(e.request);if(e._timedOut)return n(e.request,\"Request is aborted: timeout\");e.request&&e.request[readyState]==4&&(e.request.onreadystatechange=noop,succeed(e)?t(e.request):n(e.request))}}function setHeaders(e,t){var n=t.headers||{},r;n.Accept=n.Accept||defaultHeaders.accept[t.type]||defaultHeaders.accept[\"*\"];var i=typeof FormData!=\"undefined\"&&t.data instanceof FormData;!t.crossOrigin&&!n[requestedWith]&&(n[requestedWith]=defaultHeaders.requestedWith),!n[contentType]&&!i&&(n[contentType]=t.contentType||defaultHeaders.contentType);for(r in n)n.hasOwnProperty(r)&&\"setRequestHeader\"in e&&e.setRequestHeader(r,n[r])}function setCredentials(e,t){typeof t.withCredentials!=\"undefined\"&&typeof e.withCredentials!=\"undefined\"&&(e.withCredentials=!!t.withCredentials)}function generalCallback(e){lastValue=e}function urlappend(e,t){return e+(/\\?/.test(e)?\"&\":\"?\")+t}function handleJsonp(e,t,n,r){var i=uniqid++,s=e.jsonpCallback||\"callback\",o=e.jsonpCallbackName||reqwest.getcallbackPrefix(i),u=new RegExp(\"((^|\\\\?|&)\"+s+\")=([^&]+)\"),a=r.match(u),f=doc.createElement(\"script\"),l=0,c=navigator.userAgent.indexOf(\"MSIE 10.0\")!==-1;return a?a[3]===\"?\"?r=r.replace(u,\"$1=\"+o):o=a[3]:r=urlappend(r,s+\"=\"+o),context[o]=generalCallback,f.type=\"text/javascript\",f.src=r,f.async=!0,typeof f.onreadystatechange!=\"undefined\"&&!c&&(f.htmlFor=f.id=\"_reqwest_\"+i),f.onload=f.onreadystatechange=function(){if(f[readyState]&&f[readyState]!==\"complete\"&&f[readyState]!==\"loaded\"||l)return!1;f.onload=f.onreadystatechange=null,f.onclick&&f.onclick(),t(lastValue),lastValue=undefined,head.removeChild(f),l=1},head.appendChild(f),{abort:function(){f.onload=f.onreadystatechange=null,n({},\"Request is aborted: timeout\",{}),lastValue=undefined,head.removeChild(f),l=1}}}function getRequest(e,t){var n=this.o,r=(n.method||\"GET\").toUpperCase(),i=typeof n==\"string\"?n:n.url,s=n.processData!==!1&&n.data&&typeof n.data!=\"string\"?reqwest.toQueryString(n.data):n.data||null,o,u=!1;return(n[\"type\"]==\"jsonp\"||r==\"GET\")&&s&&(i=urlappend(i,s),s=null),n[\"type\"]==\"jsonp\"?handleJsonp(n,e,t,i):(o=n.xhr&&n.xhr(n)||xhr(n),o.open(r,i,n.async===!1?!1:!0),setHeaders(o,n),setCredentials(o,n),context[xDomainRequest]&&o instanceof context[xDomainRequest]?(o.onload=e,o.onerror=t,o.onprogress=function(){},u=!0):o.onreadystatechange=handleReadyState(this,e,t),n.before&&n.before(o),u?setTimeout(function(){o.send(s)},200):o.send(s),o)}function Reqwest(e,t){this.o=e,this.fn=t,init.apply(this,arguments)}function setType(e){if(e===null)return undefined;if(e.match(\"json\"))return\"json\";if(e.match(\"javascript\"))return\"js\";if(e.match(\"text\"))return\"html\";if(e.match(\"xml\"))return\"xml\"}function init(o,fn){function complete(e){o.timeout&&clearTimeout(self.timeout),self.timeout=null;while(self._completeHandlers.length>0)self._completeHandlers.shift()(e)}function success(resp){var type=o.type||resp&&setType(resp.getResponseHeader(\"Content-Type\"));resp=type!==\"jsonp\"?self.request:resp;var filteredResponse=globalSetupOptions.dataFilter(resp.responseText,type),r=filteredResponse;try{resp.responseText=r}catch(e){}if(r)switch(type){case\"json\":try{resp=context.JSON?context.JSON.parse(r):eval(\"(\"+r+\")\")}catch(err){return error(resp,\"Could not parse JSON in response\",err)}break;case\"js\":resp=eval(r);break;case\"html\":resp=r;break;case\"xml\":resp=resp.responseXML&&resp.responseXML.parseError&&resp.responseXML.parseError.errorCode&&resp.responseXML.parseError.reason?null:resp.responseXML}self._responseArgs.resp=resp,self._fulfilled=!0,fn(resp),self._successHandler(resp);while(self._fulfillmentHandlers.length>0)resp=self._fulfillmentHandlers.shift()(resp);complete(resp)}function timedOut(){self._timedOut=!0,self.request.abort()}function error(e,t,n){e=self.request,self._responseArgs.resp=e,self._responseArgs.msg=t,self._responseArgs.t=n,self._erred=!0;while(self._errorHandlers.length>0)self._errorHandlers.shift()(e,t,n);complete(e)}this.url=typeof o==\"string\"?o:o.url,this.timeout=null,this._fulfilled=!1,this._successHandler=function(){},this._fulfillmentHandlers=[],this._errorHandlers=[],this._completeHandlers=[],this._erred=!1,this._responseArgs={};var self=this;fn=fn||function(){},o.timeout&&(this.timeout=setTimeout(function(){timedOut()},o.timeout)),o.success&&(this._successHandler=function(){o.success.apply(o,arguments)}),o.error&&this._errorHandlers.push(function(){o.error.apply(o,arguments)}),o.complete&&this._completeHandlers.push(function(){o.complete.apply(o,arguments)}),this.request=getRequest.call(this,success,error)}function reqwest(e,t){return new Reqwest(e,t)}function normalize(e){return e?e.replace(/\\r?\\n/g,\"\\r\\n\"):\"\"}function serial(e,t){var n=e.name,r=e.tagName.toLowerCase(),i=function(e){e&&!e.disabled&&t(n,normalize(e.attributes.value&&e.attributes.value.specified?e.value:e.text))},s,o,u,a;if(e.disabled||!n)return;switch(r){case\"input\":/reset|button|image|file/i.test(e.type)||(s=/checkbox/i.test(e.type),o=/radio/i.test(e.type),u=e.value,(!s&&!o||e.checked)&&t(n,normalize(s&&u===\"\"?\"on\":u)));break;case\"textarea\":t(n,normalize(e.value));break;case\"select\":if(e.type.toLowerCase()===\"select-one\")i(e.selectedIndex>=0?e.options[e.selectedIndex]:null);else for(a=0;e.length&&a<e.length;a++)e.options[a].selected&&i(e.options[a])}}function eachFormElement(){var e=this,t,n,r=function(t,n){var r,i,s;for(r=0;r<n.length;r++){s=t[byTag](n[r]);for(i=0;i<s.length;i++)serial(s[i],e)}};for(n=0;n<arguments.length;n++)t=arguments[n],/input|select|textarea/i.test(t.tagName)&&serial(t,e),r(t,[\"input\",\"select\",\"textarea\"])}function serializeQueryString(){return reqwest.toQueryString(reqwest.serializeArray.apply(null,arguments))}function serializeHash(){var e={};return eachFormElement.apply(function(t,n){t in e?(e[t]&&!isArray(e[t])&&(e[t]=[e[t]]),e[t].push(n)):e[t]=n},arguments),e}function buildParams(e,t,n,r){var i,s,o,u=/\\[\\]$/;if(isArray(t))for(s=0;t&&s<t.length;s++)o=t[s],n||u.test(e)?r(e,o):buildParams(e+\"[\"+(typeof o==\"object\"?s:\"\")+\"]\",o,n,r);else if(t&&t.toString()===\"[object Object]\")for(i in t)buildParams(e+\"[\"+i+\"]\",t[i],n,r);else r(e,t)}var context=this;if(\"document\"in context)var doc=document,byTag=\"getElementsByTagName\",head=doc[byTag](\"head\")[0];else{var XHR2;try{XHR2=require(\"xhr2\")}catch(ex){throw new Error(\"Peer dependency `xhr2` required! Please npm install xhr2\")}}var httpsRe=/^http/,protocolRe=/(^\\w+):\\/\\//,twoHundo=/^(20\\d|1223)$/,readyState=\"readyState\",contentType=\"Content-Type\",requestedWith=\"X-Requested-With\",uniqid=0,callbackPrefix=\"reqwest_\"+ +(new Date),lastValue,xmlHttpRequest=\"XMLHttpRequest\",xDomainRequest=\"XDomainRequest\",noop=function(){},isArray=typeof Array.isArray==\"function\"?Array.isArray:function(e){return e instanceof Array},defaultHeaders={contentType:\"application/x-www-form-urlencoded\",requestedWith:xmlHttpRequest,accept:{\"*\":\"text/javascript, text/html, application/xml, text/xml, */*\",xml:\"application/xml, text/xml\",html:\"text/html\",text:\"text/plain\",json:\"application/json, text/javascript\",js:\"application/javascript, text/javascript\"}},xhr=function(e){if(e.crossOrigin===!0){var t=context[xmlHttpRequest]?new XMLHttpRequest:null;if(t&&\"withCredentials\"in t)return t;if(context[xDomainRequest]){var n=/^https?/;if(window.location.href.match(n)[0]!==e.url.match(n)[0])throw new Error(\"XDomainRequest: requests must be targeted to the same scheme as the hosting page.\");return new XDomainRequest}throw new Error(\"Browser does not support cross-origin requests\")}return context[xmlHttpRequest]?new XMLHttpRequest:XHR2?new XHR2:new ActiveXObject(\"Microsoft.XMLHTTP\")},globalSetupOptions={dataFilter:function(e){return e}};return Reqwest.prototype={abort:function(){this._aborted=!0,this.request.abort()},retry:function(){init.call(this,this.o,this.fn)},then:function(e,t){return e=e||function(){},t=t||function(){},this._fulfilled?this._responseArgs.resp=e(this._responseArgs.resp):this._erred?t(this._responseArgs.resp,this._responseArgs.msg,this._responseArgs.t):(this._fulfillmentHandlers.push(e),this._errorHandlers.push(t)),this},always:function(e){return this._fulfilled||this._erred?e(this._responseArgs.resp):this._completeHandlers.push(e),this},fail:function(e){return this._erred?e(this._responseArgs.resp,this._responseArgs.msg,this._responseArgs.t):this._errorHandlers.push(e),this},\"catch\":function(e){return this.fail(e)}},reqwest.serializeArray=function(){var e=[];return eachFormElement.apply(function(t,n){e.push({name:t,value:n})},arguments),e},reqwest.serialize=function(){if(arguments.length===0)return\"\";var e,t,n=Array.prototype.slice.call(arguments,0);return e=n.pop(),e&&e.nodeType&&n.push(e)&&(e=null),e&&(e=e.type),e==\"map\"?t=serializeHash:e==\"array\"?t=reqwest.serializeArray:t=serializeQueryString,t.apply(null,n)},reqwest.toQueryString=function(e,t){var n,r,i=t||!1,s=[],o=encodeURIComponent,u=function(e,t){t=\"function\"==typeof t?t():t==null?\"\":t,s[s.length]=o(e)+\"=\"+o(t)};if(isArray(e))for(r=0;e&&r<e.length;r++)u(e[r].name,e[r].value);else for(n in e)e.hasOwnProperty(n)&&buildParams(n,e[n],i,u);return s.join(\"&\").replace(/%20/g,\"+\")},reqwest.getcallbackPrefix=function(){return callbackPrefix},reqwest.compat=function(e,t){return e&&(e.type&&(e.method=e.type)&&delete e.type,e.dataType&&(e.type=e.dataType),e.jsonpCallback&&(e.jsonpCallbackName=e.jsonpCallback)&&delete e.jsonpCallback,e.jsonp&&(e.jsonpCallback=e.jsonp)),new Reqwest(e,t)},reqwest.ajaxSetup=function(e){e=e||{};for(var t in e)globalSetupOptions[t]=e[t]},reqwest})","/*!\n * JavaScript Cookie v2.1.3\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\treturn (document.cookie = [\n\t\t\t\t\tkey, '=', value,\n\t\t\t\t\tattributes.expires ? '; expires=' + attributes.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\n\t\t\t\t\tattributes.path ? '; path=' + attributes.path : '',\n\t\t\t\t\tattributes.domain ? '; domain=' + attributes.domain : '',\n\t\t\t\t\tattributes.secure ? '; secure' : ''\n\t\t\t\t].join(''));\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","var scorm12Obj = (function () {\n    \"use strict\";\n\n    var api, dmeList, utilsInstance, scorm12Obj = {};\n\n    scorm12Obj.getRuntimeData = function() {\n        return dmeList;\n    };\n\n    scorm12Obj.set = function(key, value) {\n        api.LMSSetValue(key, value);\n    };\n\n    scorm12Obj.commit = function() {\n        api.LMSCommit(\"\");\n    };\n\n    scorm12Obj.finish = function() {\n        api.LMSCommit(\"\");\n        api.LMSFinish(\"\");\n        // TODO Should we do this?  Maybe this should be a custom option?\n        document.location.href = \"blank.htm\";\n    };\n\n    scorm12Obj.loadDataFromLMS = function () {\n        var n, ret, qArray, w, h, i, parsed, lic = '', scoUrl;\n        api = getAPIHandle();\n\n        if (!api) {\n            alert(\"LMS API Adapter for SCORM 1.2 could not be located. There is no communication with the LMS therefor no content will be fetched from the content server.\");\n            return;\n        }\n\n        n = api.LMSInitialize(\"\");\n        if (n !== \"true\") {\n            alert(\"LMS Initialize failed.\");\n            return;\n        }\n        dmeList = {};\n        dmeList[\"cmi.core._children\"] = \"\";\n        dmeList[\"cmi.core.student_id\"] = \"\";\n        dmeList[\"cmi.core.student_name\"] = \"\";\n        dmeList[\"cmi.core.lesson_location\"] = \"\";\n        dmeList[\"cmi.core.credit\"] = \"\";\n        dmeList[\"cmi.core.lesson_status\"] = \"\";\n        dmeList[\"cmi.core.entry\"] = \"\";\n        dmeList[\"cmi.core.total_time\"] = \"\";\n        dmeList[\"cmi.core.lesson_mode\"] = \"\";\n\n        dmeList[\"cmi.suspend_data\"] = \"\";\n        dmeList[\"cmi.launch_data\"] = \"\";\n        dmeList[\"cmi.comments\"] = \"\";\n        dmeList[\"cmi.comments_from_lms\"] = \"\";\n\n        //score\n        dmeList[\"cmi.core.score._children\"] = \"\";\n        dmeList[\"cmi.core.score.raw\"] = \"\";\n        dmeList[\"cmi.core.score.min\"] = \"\";\n        dmeList[\"cmi.core.score.max\"] = \"\";\n\n        //student data\n        dmeList[\"cmi.student_data._children\"] = \"\";\n        dmeList[\"cmi.student_data.mastery_score\"] = \"\";\n        dmeList[\"cmi.student_data.max_time_allowed\"] = \"\";\n        dmeList[\"cmi.student_data.time_limit_action\"] = \"\";\n\n        //student preference\n        dmeList[\"cmi.student_preference._children\"] = \"\";\n        dmeList[\"cmi.student_preference.audio\"] = \"\";\n        dmeList[\"cmi.student_preference.language\"] = \"\";\n        dmeList[\"cmi.student_preference.speed\"] = \"\";\n        dmeList[\"cmi.student_preference.text\"] = \"\";\n\n        //objectives\n        dmeList[\"cmi.objectives._children\"] = \"\";\n        dmeList[\"cmi.objectives._count\"] = \"\";\n\n        //interactions\n        dmeList[\"cmi.interactions._children\"] = \"\";\n        dmeList[\"cmi.interactions._count\"] = \"\";\n\n        for (i in dmeList) {\n            ret = api.LMSGetValue(i);\n            dmeList[i] = ret;\n        }\n        dmeList.objectives = [];\n        dmeList.interactions = [];\n        scorm12Obj.getObjectiveData();\n        scorm12Obj.getInteractionData();\n        scorm12Obj.setupDefaults();\n    };\n\n    scorm12Obj.setupDefaults = function () {\n        if (s4xdmConfig.forceStatusIncompleteOnInit) {\n            var cs = dmeList[\"cmi.core.lesson_status\"];\n            if (!cs || cs === \"not attempted\") {\n                dmeList[\"cmi.core.lesson_status\"] = \"incomplete\";\n                api.LMSSetValue(\"cmi.core.lesson_status\", \"incomplete\");\n            }\n        }\n    };\n\n    scorm12Obj.getObjectiveData = function () {\n        if (!s4xdmConfig.useObjectives) {\n            return;\n        }\n        var i = -1, j, ret, obj_names = [];\n        obj_names[0] = \"id\";\n        obj_names[1] = \"score._children\";\n        obj_names[2] = \"score.raw\";\n        obj_names[3] = \"score.min\";\n        obj_names[4] = \"score.max\";\n        obj_names[5] = \"status\";\n        var _nameCount = \"cmi.objectives._count\";\n        var nCount = parseInt(api.LMSGetValue(_nameCount));\n\n        var _name = \"\";\n        var _value = \"\";\n        if (!isNaN(nCount)) {\n            for (i = nCount - 1; i >= 0; i--) { //walk backward in case LMS does journaling\n                for (j = 0; j < obj_names.length; j++) {\n                    _name = \"cmi.objectives.\" + i + \".\" + obj_names[j];\n                    _value = api.LMSGetValue(_name);\n                    dmeList[_name] = _value;\n                }\n            }\n            //add the _count\n            dmeList[_nameCount] = nCount;\n        }\n        else {\n            //add the _count\n            dmeList[_nameCount] = \"0\";\n        }\n\n    };\n\n    scorm12Obj.getInteractionData = function () {\n        if (!s4xdmConfig.useInteractions) {\n            return;\n        }\n        var i = -1, j, ret, interaction_names = [];\n        var _name = \"\";\n        var _value = \"\";\n        interaction_names[0] = \"objectives._count\";\n        interaction_names[1] = \"correct_responses._count\";\n\n        var _nameCount = \"cmi.interactions._count\";\n        var nCount = parseInt(api.LMSGetValue(_nameCount));\n        if (!isNaN(nCount)) {\n            for (i = nCount - 1; i >= 0; i--) { //walk backward in case LMS does journaling\n                for (j = 0; j < interaction_names.length; j++) {\n                    _name = \"cmi.interactions.\" + i + \".\" + interaction_names[j];\n                    _value = api.LMSGetValue(_name);\n                    dmeList[_name] = _value;\n                }\n            }\n            //add the _count\n            dmeList[_nameCount] = nCount;\n        }\n        else {\n            //add the _count\n            dmeList[_nameCount] = \"0\";\n        }\n    };\n\n\n    var _Debug = false;  // set this to false to turn debugging off\n                         // and get rid of those annoying alert boxes.\n\n// local variable definitions\n    var apiHandle = null;\n    var API = null;\n    var findAPITries = 0;\n\n    var SCORM_objAPI = null;\n\n    /******************************************************************************\n     **\n     ** Function getAPIHandle()\n     ** Inputs:  None\n     ** Return:  value contained by APIHandle\n     **\n     ** Description:\n     ** Returns the handle to API object if it was previously set,\n     ** otherwise it returns null\n     **\n     *******************************************************************************/\n    function WriteToDebug(a) {\n        //alert(a)\n    }\n\n    function SCORM_GrabAPI() {\n\n        WriteToDebug(\"In SCORM_GrabAPI\");\n\n        //if we haven't already located the API, find it using our algorithm\n        if (typeof(SCORM_objAPI) == \"undefined\" || SCORM_objAPI == null) {\n            WriteToDebug(\"Searching with Rustici Software algorithm\");\n            SCORM_objAPI = SCORM_SearchForAPI(window);\n        }\n\n        //if it's still not found, try the algorithm from the SCORM spec\n        if (typeof(SCORM_objAPI) == \"undefined\" || SCORM_objAPI == null) {\n            WriteToDebug(\"Searching with ADL algorithm\");\n            SCORM_objAPI = SCORM_getAPI();\n        }\n\n        WriteToDebug(\"API Found, returning\");\n\n        return SCORM_objAPI;\n\n    }\n\n    function SCORM_SearchForAPI(wndLookIn) {\n\n        WriteToDebug(\"SCORM_SearchForAPI\");\n\n        var objAPITemp = null;\n        var strDebugID = \"\";\n\n        strDebugID = \"Name=\" + wndLookIn.name + \", href=\" + wndLookIn.location.href\n\n        objAPITemp = wndLookIn.API;\n\n        if (SCORM_APIFound(objAPITemp)) {\n            WriteToDebug(\"Found API in this window - \" + strDebugID);\n            return objAPITemp;\n        }\n\n        if (SCORM_WindowHasParent(wndLookIn)) {\n            WriteToDebug(\"Searching Parent - \" + strDebugID);\n            objAPITemp = SCORM_SearchForAPI(wndLookIn.parent);\n        }\n\n        if (SCORM_APIFound(objAPITemp)) {\n            WriteToDebug(\"Found API in a parent - \" + strDebugID);\n            return objAPITemp;\n        }\n\n        if (SCORM_WindowHasOpener(wndLookIn)) {\n            WriteToDebug(\"Searching Opener - \" + strDebugID);\n            objAPITemp = SCORM_SearchForAPI(wndLookIn.opener);\n        }\n\n        if (SCORM_APIFound(objAPITemp)) {\n            WriteToDebug(\"Found API in an opener - \" + strDebugID);\n            return objAPITemp;\n        }\n\n        //look in child frames individually, don't call this function recursively\n        //on them to prevent an infinite loop when it looks back up to the parents\n        WriteToDebug(\"Looking in children - \" + strDebugID);\n        objAPITemp = SCORM_LookInChildren(wndLookIn);\n\n        if (SCORM_APIFound(objAPITemp)) {\n            WriteToDebug(\"Found API in Children - \" + strDebugID);\n            return objAPITemp;\n        }\n\n        WriteToDebug(\"Didn't find API in this window - \" + strDebugID);\n        return null;\n    }\n\n    function SCORM_LookInChildren(wnd) {\n\n        WriteToDebug(\"SCORM_LookInChildren\");\n\n        var objAPITemp = null;\n\n        var strDebugID = \"\";\n\n        strDebugID = \"Name=\" + wnd.name + \", href=\" + wnd.location.href\n\n        for (var i = 0; i < wnd.frames.length; i++) {\n\n            WriteToDebug(\"Looking in child frame \" + i);\n            objAPITemp = win.frames[i].API;\n\n            if (SCORM_APIFound(objAPITemp)) {\n                WriteToDebug(\"Found API in child frame of \" + strDebugID);\n                return objAPITemp;\n            }\n\n            WriteToDebug(\"Looking in this child's children \" + strDebugID);\n            objAPITemp = SCORM_LookInChildren(wnd.frames[i]);\n\n            if (SCORM_APIFound(objAPITemp)) {\n                WriteToDebug(\"API found in this child's children \" + strDebugID);\n                return objAPITemp;\n            }\n        }\n\n        return null;\n    }\n\n    function SCORM_WindowHasOpener(wnd) {\n        WriteToDebug(\"In SCORM_WindowHasOpener\");\n        if ((wnd.opener != null) && (wnd.opener != wnd) && (typeof(wnd.opener) != \"undefined\")) {\n            WriteToDebug(\"Window Does Have Opener\");\n            return true;\n        }\n        else {\n            WriteToDebug(\"Window Does Not Have Opener\");\n            return false;\n        }\n    }\n\n    function SCORM_WindowHasParent(wnd) {\n        WriteToDebug(\"In SCORM_WindowHasParent\");\n        if ((wnd.parent != null) && (wnd.parent != wnd) && (typeof(wnd.parent) != \"undefined\")) {\n            WriteToDebug(\"Window Does Have Parent\");\n            return true;\n        }\n        else {\n            WriteToDebug(\"Window Does Not Have Parent\");\n            return false;\n        }\n    }\n\n    function SCORM_APIFound(obj) {\n        WriteToDebug(\"In SCORM_APIFound\");\n        if (obj == null || typeof(obj) == \"undefined\") {\n            WriteToDebug(\"API NOT Found\");\n            return false;\n        }\n        else {\n            WriteToDebug(\"API Found\");\n            return true;\n        }\n    }\n\n    var SCORM_findAPITries = 0;\n\n    function SCORM_findAPI(win) {\n        WriteToDebug(\"In SCORM_findAPI\");\n        // Check to see if the window (win) contains the API\n        // if the window (win) does not contain the API and\n        // the window (win) has a parent window and the parent window\n        // is not the same as the window (win)\n        while (( win.API == null) && (win.parent != null) && (win.parent != win)) {\n            // increment the number of findAPITries\n            SCORM_findAPITries++;\n            WriteToDebug(\"SCORM_findAPITries=\" + SCORM_findAPITries);\n            // Note: 7 is an arbitrary number, but should be more than sufficient\n            if (SCORM_findAPITries > 7) {\n                WriteToDebug(\"Error finding API -- too deeply nested.\");\n                //set it back to 0\n                SCORM_findAPITries = 0;\n                return null;\n            }\n\n            // set the variable that represents the window being\n            // being searched to be the parent of the current window\n            // then search for the API again\n            win = win.parent;\n        }\n        return win.API;\n    }\n\n    function getAPIHandle() {\n        WriteToDebug(\"In SCORM_getAPI\");\n\n        // start by looking for the API in the current window\n        var theAPI = SCORM_findAPI(window);\n        // if the API is null (could not be found in the current window)\n        // and the current window has an opener window\n\n        //we have to use parent.window.opener here because the APIWraper is in the nav.htm file and we need to get up to the parent to check for the opener window\n        if ((theAPI == null) && (parent.window.opener != null) && (typeof(parent.window.opener) != \"undefined\")) {\n            WriteToDebug(\"Looking in opener\");\n            // try to find the API in the current windows opener\n            theAPI = SCORM_findAPI(parent.window.opener);\n        }\n        // if the API has not been found\n\n        if (theAPI == null) {\n            // Alert the user that the API Adapter could not be found\n            WriteToDebug(\"Unable to find an API adapter\");\n        }\n        return theAPI;\n    }\n\n    return scorm12Obj;\n\n})();\n","var scorm2004Obj = (function () {\n    \"use strict\";\n\n    var api, dmeList, utilsInstance, scorm2004Obj = {};\n\n    scorm2004Obj.getRuntimeData = function() {\n        return dmeList;\n    };\n\n    scorm2004Obj.set = function(key, value) {\n        api.SetValue(key, value);\n    };\n\n    scorm2004Obj.commit = function() {\n        api.Commit(\"\");\n    };\n\n    scorm2004Obj.finish = function() {\n        api.Commit(\"\");\n        api.Terminate(\"\");\n        // TODO Should we do this?  Maybe this should be a custom option?\n        document.location.href = \"blank.htm\";\n    };\n\n    scorm2004Obj.loadDataFromLMS = function () {\n        var n, ret, qArray, w, h, i, parsed, lic = '', scoUrl = '';\n        api = getAPIHandle();\n\n        if (!api) {\n            alert(\"LMS API Adapter for SCORM 2004 could not be located. There is no communication with the LMS therefor no content will be fetched from the content server.\");\n            return;\n        }\n\n        n = api.Initialize(\"\");\n        if (n !== \"true\") {\n            alert(\"LMS Initialize failed.\");\n            return;\n        }\n        dmeList = {};\n        dmeList[\"cmi._version\"] = \"\";\n        dmeList[\"cmi._children\"] = \"\";\n        dmeList[\"cmi.learner_id\"] = \"\";\n        dmeList[\"cmi.learner_name\"] = \"\";\n        dmeList[\"cmi.location\"] = \"\";\n        dmeList[\"cmi.credit\"] = \"\";\n        dmeList[\"cmi.completion_status\"] = \"\";\n        dmeList[\"cmi.completion_threshold\"] = \"\";\n        dmeList[\"cmi.success_status\"] = \"\";\n        dmeList[\"cmi.entry\"] = \"\";\n        dmeList[\"cmi.total_time\"] = \"\";\n        dmeList[\"cmi.mode\"] = \"\";\n\n        dmeList[\"cmi.suspend_data\"] = \"\";\n        dmeList[\"cmi.launch_data\"] = \"\";\n        dmeList[\"cmi.progress_measure\"] = \"\";\n\n        dmeList[\"cmi.scaled_passing_score\"] = \"\";\n        //score\n        dmeList[\"cmi.score._children\"] = \"\";\n        dmeList[\"cmi.score.scaled\"] = \"\";\n        dmeList[\"cmi.score.raw\"] = \"\";\n        dmeList[\"cmi.score.min\"] = \"\";\n        dmeList[\"cmi.score.max\"] = \"\";\n\n        //student data\n        dmeList[\"cmi.max_time_allowed\"] = \"\";\n        dmeList[\"cmi.time_limit_action\"] = \"\";\n        dmeList[\"cmi.learner_preference._children\"] = \"\";\n        dmeList[\"cmi.learner_preference.audio_captioning\"] = \"\";\n        dmeList[\"cmi.learner_preference.delivery_speed\"] = \"\";\n        dmeList[\"cmi.learner_preference.language\"] = \"\";\n        dmeList[\"cmi.learner_preference.audio_level\"] = \"\";\n\n        //student preference\n        dmeList[\"cmi.student_preference._children\"] = \"\";\n        dmeList[\"cmi.student_preference.audio\"] = \"\";\n        dmeList[\"cmi.student_preference.language\"] = \"\";\n        dmeList[\"cmi.student_preference.speed\"] = \"\";\n        dmeList[\"cmi.student_preference.text\"] = \"\";\n\n        //objectives\n        dmeList[\"cmi.objectives._children\"] = \"\";\n        dmeList[\"cmi.objectives._count\"] = \"\";\n\n        //interactions\n        dmeList[\"cmi.interactions._children\"] = \"\";\n        dmeList[\"cmi.interactions._count\"] = \"\";\n\n        //comments from LMS\n        dmeList[\"cmi.comments_from_lms._children\"] = \"\";\n        dmeList[\"cmi.comments_from_lms._count\"] = \"\";\n\n        //comments from Learner\n        dmeList[\"cmi.comments_from_learner._children\"] = \"\";\n        dmeList[\"cmi.comments_from_learner._count\"] = \"\";\n\n        for (i in dmeList) {\n            ret = api.GetValue(i);\n            dmeList[i] = ret;\n        }\n        dmeList.objectives = [];\n        dmeList.interactions = [];\n        dmeList.commentsFromLearner = [];\n        dmeList.commentsFromLMS = [];\n        scorm2004Obj.getObjectiveData();\n        scorm2004Obj.getInteractionData();\n        scorm2004Obj.getCommentsFromLearner();\n        scorm2004Obj.getCommentsFromLMS();\n        scorm2004Obj.setupDefaults();\n    };\n\n    scorm2004Obj.setupDefaults = function () {\n        if (s4xdmConfig.forceStatusIncompleteOnInit) {\n            var cs = dmeList[\"cmi.completion_status\"];\n            if (!cs || cs === \"not attempted\" || cs === \"unknown\") {\n                dmeList[\"cmi.completion_status\"] = \"incomplete\";\n                api.LMSSetValue(\"cmi.completion_status\", \"incomplete\");\n            }\n        }\n    };\n\n    scorm2004Obj.getObjectiveData = function () {\n        if (!s4xdmConfig.useObjectives) {\n            return;\n        }\n        var i = -1, j, ret, obj_names = [];\n        obj_names[0] = \"id\";\n        obj_names[1] = \"score._children\";\n        obj_names[2] = \"score.raw\";\n        obj_names[3] = \"score.scaled\";\n        obj_names[4] = \"score.min\";\n        obj_names[5] = \"score.max\";\n        obj_names[6] = \"success_status\";\n        obj_names[7] = \"completion_status\";\n        obj_names[8] = \"progress_measure\";\n        obj_names[9] = \"description\";\n        var _nameCount = \"cmi.objectives._count\";\n        var nCount = parseInt(api.GetValue(_nameCount));\n\n        var _name = \"\";\n        var _value = \"\";\n        if (!isNaN(nCount)) {\n            for (i = nCount - 1; i >= 0; i--) { //walk backward in case LMS does journaling\n                for (j = 0; j < obj_names.length; j++) {\n                    _name = \"cmi.objectives.\" + i + \".\" + obj_names[j];\n                    _value = api.GetValue(_name);\n                    dmeList[_name] = _value;\n                }\n            }\n            //add the _count\n            dmeList[_nameCount] = nCount;\n        }\n        else {\n            //add the _count\n            dmeList[_nameCount] = \"0\";\n        }\n\n    };\n\n    scorm2004Obj.getInteractionData = function () {\n        if (!s4xdmConfig.useInteractions) {\n            return;\n        }\n        var i = -1, j, ret, interaction_names = [];\n        var _name = \"\";\n        var _value = \"\";\n        interaction_names[0] = \"objectives._count\";\n        interaction_names[1] = \"correct_responses._count\";\n        interaction_names[2] = \"id\";\n        interaction_names[3] = \"type\";\n        interaction_names[4] = \"objectives\";\n        interaction_names[5] = \"timestamp\";\n        interaction_names[6] = \"correct_responses\";\n        interaction_names[7] = \"weighting\";\n        interaction_names[8] = \"learner_response\";\n        interaction_names[9] = \"result\";\n        interaction_names[10] = \"latency\";\n        interaction_names[11] = \"description\";\n\n        var _nameCount = \"cmi.interactions._count\";\n        var nCount = parseInt(api.GetValue(_nameCount));\n        if (!isNaN(nCount)) {\n            for (i = nCount - 1; i >= 0; i--) { //walk backward in case LMS does journaling\n                for (j = 0; j < interaction_names.length; j++) {\n                    _name = \"cmi.interactions.\" + i + \".\" + interaction_names[j];\n                    _value = api.GetValue(_name);\n                    dmeList[_name] = _value\n                }\n            }\n            //add the _count\n            dmeList[_nameCount] = nCount;\n        }\n        else {\n            //add the _count\n            dmeList[_nameCount] = \"0\";\n        }\n    };\n\n    scorm2004Obj.getCommentsFromLearner = function () {\n        if (!s4xdmConfig.useCommentsFromLearner) {\n            return;\n        }\n        var i = -1, j, ret, obj_names = [];\n        obj_names[0] = \"comment\";\n        obj_names[1] = \"location\";\n        obj_names[2] = \"timestamp\";\n        var _nameCount = \"cmi.comments_from_learner._count\";\n        var nCount = parseInt(api.GetValue(_nameCount));\n\n        var _name = \"\";\n        var _value = \"\";\n        if (!isNaN(nCount)) {\n            for (i = nCount - 1; i >= 0; i--) { //walk backward in case LMS does journaling\n                for (j = 0; j < obj_names.length; j++) {\n                    _name = \"cmi.comments_from_learner.\" + i + \".\" + obj_names[j];\n                    _value = api.GetValue(_name);\n                    dmeList[_name] = _value;\n                }\n            }\n            //add the _count\n            dmeList[_nameCount] = nCount;\n        }\n        else {\n            //add the _count\n            dmeList[_nameCount] = \"0\";\n        }\n\n    };\n\n    scorm2004Obj.getCommentsFromLMS = function () {\n        if (!s4xdmConfig.useCommentsFromLMS) {\n            return;\n        }\n        var i = -1, j, ret, obj_names = [];\n        obj_names[0] = \"comment\";\n        obj_names[1] = \"location\";\n        obj_names[2] = \"timestamp\";\n        var _nameCount = \"cmi.comments_from_lms._count\";\n        var nCount = parseInt(api.GetValue(_nameCount));\n\n        var _name = \"\";\n        var _value = \"\";\n        if (!isNaN(nCount)) {\n            for (i = nCount - 1; i >= 0; i--) { //walk backward in case LMS does journaling\n                for (j = 0; j < obj_names.length; j++) {\n                    _name = \"cmi.comments_from_lms.\" + i + \".\" + obj_names[j];\n                    _value = api.GetValue(_name);\n                    dmeList[_name] = _value;\n                }\n            }\n            //add the _count\n            dmeList[_nameCount] = nCount;\n        }\n        else {\n            //add the _count\n            dmeList[_nameCount] = \"0\";\n        }\n\n    };\n\n// local variable definitions\n    var apiHandle = null;\n    var API = null;\n    var findAPITries = 0;\n\n    /******************************************************************************\n     **\n     ** Function getAPIHandle()\n     ** Inputs:  None\n     ** Return:  value contained by APIHandle\n     **\n     ** Description:\n     ** Returns the handle to API object if it was previously set,\n     ** otherwise it returns null\n     **\n     *******************************************************************************/\n    function getAPIHandle() {\n        if (apiHandle == null) {\n            apiHandle = getAPI();\n        }\n\n        return apiHandle;\n    }\n\n    /*******************************************************************************\n     **\n     ** Function findAPI(win)\n     ** Inputs:  win - a Window Object\n     ** Return:  If an API object is found, it's returned, otherwise null is returned\n     **\n     ** Description:\n     ** This function looks for an object named API in parent and opener windows\n     **\n     *******************************************************************************/\n    function findAPI(win) {\n        while ((win.API_1484_11 == null) && (win.parent != null) && (win.parent != win)) {\n            findAPITries++;\n\n            if (findAPITries > 500) {\n                alert(\"Error finding API -- too deeply nested.\");\n                return null;\n            }\n\n            win = win.parent;\n\n        }\n        return win.API_1484_11;\n    }\n\n//created by Mike Rustici\n    var MAX_PARENTS_TO_SEARCH = 500;\n    /*\n     ScanParentsForApi\n     -Searches all the parents of a given window until\n     it finds an object named \"API_1484_11\". If an\n     object of that name is found, a reference to it\n     is returned. Otherwise, this function returns null.\n     */\n    function ScanParentsForApi(win) {\n        /*\n         Establish an outrageously high maximum number of\n         parent windows that we are will to search as a\n         safe guard against an infinite loop. This is\n         probably not strictly necessary, but different\n         browsers can do funny things with undefined objects.\n         */\n        var nParentsSearched = 0;\n        /*\n         Search each parent window until we either:\n         -find the API,\n         -encounter a window with no parent (parent is null\n         or the same as the current window)\n         -or, have reached our maximum nesting threshold\n         */\n        while ((win.API_1484_11 == null) &&\n        (win.parent != null) && (win.parent != win) &&\n        (nParentsSearched <= MAX_PARENTS_TO_SEARCH)\n            ) {\n            nParentsSearched++;\n            win = win.parent;\n        }\n        /*\n         If the API doesn't exist in the window we stopped looping on,\n         then this will return null.\n         */\n        return win.API_1484_11;\n    }\n\n    /*\n     GetAPI\n     -Searches all parent and opener windows relative to the\n     current window for the SCORM 2004 API Adapter.\n     Returns a reference to the API Adapter if found or null\n     otherwise.\n     */\n    function getAPI() {\n        var API = null;\n\n        //Search all the parents of the current window if there are any\n        if ((window.parent != null) && (window.parent != window)) {\n            API = ScanParentsForApi(window.parent);\n        }\n        /*\n         If we didn't find the API in this window's chain of parents,\n\n         then search all the parents of the opener window if there is one\n\n         */\n        if ((API == null) && (window.top.opener != null)) {\n            API = ScanParentsForApi(window.top.opener);\n        }\n        return API;\n    }\n\n    return scorm2004Obj;\n})();\n"],"sourceRoot":"/source/"}